{"version":3,"sources":["app.js","config.js","directives/on-load.directive.js","directives/set-map-height.directive.js","filters/abs.filter.js","filters/iois-by-rating.filter.js","filters/mob.filter.js","filters/rating.filter.js","filters/short-number.filter.js","filters/underscore-to-space.filter.js","routes/routes.js","services/analytics.service.js","services/api.service.js","services/auth.service.js","services/camera.service.js","services/canned-response.service.js","services/facebook.service.js","services/imageuri.service.js","services/ioi.service.js","services/location.service.js","services/observation.service.js","services/platforms.service.js","services/profile-picture.service.js","services/push.notification.service.js","services/s3.service.js","services/sharing.service.js","services/tabs.service.js","services/tap.params.service.js","services/user.service.js","directives/join-mob/join-mob.component.js","directives/mob-list/mob-list.component.js","directives/nav-selector/nav-selector.directive.js","directives/toggle/toggle.component.js","modals/enable-notification/enable-notification.service.js","modals/observation-modal/observation-modal.controller.js","modals/observation-modal/observation-modal.service.js","modals/tap-details-modal/tap-details-modal.controller.js","modals/tap-details-modal/tap-details-modal.service.js","routes/auth/auth.controller.js","routes/main/main.controller.js","routes/onboarding/onboarding.controller.js","routes/auth/login/login.controller.js","routes/auth/signup/signup.controller.js","routes/auth/signup-success/signup-success.controller.js","routes/main/feed/feed.controller.js","routes/main/mobs/mobs.controller.js","routes/main/nearby/nearby.controller.js","routes/main/profile/profile.controller.js","routes/main/tap/tap.controller.js","routes/main/nearby/filter-modal/filter-modal.controller.js","routes/main/nearby/nearby-list/nearby-list.controller.js","routes/main/nearby/nearby-map/nearby-map.controller.js","routes/main/profile/my-mobs/my-mobs.controller.js","routes/main/profile/settings/settings.controller.js"],"names":["standardEncodeURIComponent","encodeURIComponent","string","replace","c","charCodeAt","toString","toUpperCase","angular","module","config","$ionicConfigProvider","tabs","position","style","navBar","alignTitle","views","maxCache","run","FTAP_CONFIG","firstScriptTag","document","getElementsByTagName","tag","createElement","src","GOOGLE_API_KEY","parentNode","insertBefore","$ionicPlatform","$cordovaKeyboard","ready","hideAccessoryBar","disableScroll","$rootScope","$window","$state","$on","event","toState","toParams","fromState","fromParams","options","isDefined","NativeTap","native","hide","PushNotificationService","checkIfEnabled","then","register","LocationService","localStorage","ONBOARDING_COMPLETE","startUp","on","AnalyticsService","recordStart","recordResume","constant","IDENTITY_POOL_ID","AWS_REGION","USER_POOL_ID","USER_POOL_ARN","USER_POOL_CLIENT_ID","S3_PHOTO_BUCKET","S3_RESOURCE_BUCKET","GCM_SENDER_ID","MOBILE_ANALYTICS_APP_ID","A_OR_B","VERSION_NUMBER","SHOW_DEBUG_INFO","directive","onLoad","$inject","$parse","restrict","link","scope","element","attrs","fn","$apply","$event","PlatformService","isIOS","css","innerHeight","isAndroid","filter","abs","Math","input","ioisByRating","items","rating","filtered","isArray","forEach","item","hasOwnProperty","count","change","push","mob","isActive","isMob","Object","keys","key","indexOf","shortNumber","$filter","underscoreToSpace","routes","reauthResolver","isLoggedInFacebook","AuthService","FacebookService","UserService","hasPlugin","checkFacebookLoginStatus","catch","isAnonymous","anonymousLogin","$stateProvider","$urlRouterProvider","USE_CONFIG_A","state","url","templateUrl","controller","controllerAs","abstract","params","reload","resolve","hasFacebook","cache","$q","$timeout","TapParamsService","deferred","defer","hasParams","show","reInitialize","showCoachMarks","COACH_MARKS_SEEN","promise","tapCreated","nearbySubstates","name","profileSubstates","substatesList","states","substateDefinitions","substateDefinitionList","when","substates","map","get","transitionTo","find","active","substateDefinition","onEnter","stateDefinition","otherwise","factory","$injector","SharingService","service","client","AMA","Manager","appId","APP_NAME","recordEvent","recordTap","duration","eventType","screenName","attributes","metrics","locationMetrics","hasLocation","profile_location_enabled","session_location_lat","lastKnownLocation","coords","latitude","session_location_lon","longitude","sharing","facebook","extend","timestamp","gender","city","birthYear","loveCount","okCount","hateCount","notifs","screenView","ApiService","request","verb","body","additionalParams","reject","AWS","credentials","needsRefresh","refresh","err","apigClient","apigClientFactory","newClient","accessKey","accessKeyId","secretKey","secretAccessKey","sessionToken","ProfilePictureService","region","logger","console","initializeAWSCredentials","AWSCognito","CognitoIdentityCredentials","IdentityPoolId","RoleArn","update","poolData","UserPoolId","ClientId","Paranoia","userPool","CognitoIdentityServiceProvider","CognitoUserPool","emailSignup","emailLogin","facebookAuth","facebookLink","facebookUnlink","checkEmailLoginStatus","logOut","isUsingFacebook","isUsingEmail","registerUser","email","username","password","signUp","CognitoUserAttribute","Name","Value","result","skipRegister","cognitoUser","CognitoUser","Username","Pool","authenticateUser","AuthenticationDetails","Password","onSuccess","Logins","idToken","jwtToken","expired","cogId","identityId","signOut","onFailure","response","data","socialid","facebookLogin","getMyInfo","info","birthday","split","location","socialId","id","getFacebookProfilePictureUrl","updateSocialId","facebookConnectPlugin","logout","cognitoidentity","CognitoIdentity","unlinkIdentity","IdentityId","LoginsToRemove","doLogin","login","authResponse","accessToken","setProfileSettings","checkLoginStatus","getCurrentUser","getSession","session","getUsername","CameraService","getPicture","navigator","camera","quality","destinationType","Camera","DestinationType","FILE_URI","correctOrientation","cleanup","crop","imageUri","width","height","returnBlob","image","canvas","context","getContext","onload","scale","max","drawImage","toBlob","toDataURL","e","CannedResponseService","$http","defaultResponses","getResponses","ioiId","queryParams","phrase","responses","formattedCount","formattedCountPlusOne","mobId","isMobMember","getLoginStatus","status","getFriends","friends","getPage","done","api","Array","prototype","apply","paging","next","success","updateFriends","Idlist","friend","type","Attributes","ImageUriService","currentImageUri","IOIService","moment","currentIois","getIoisForIds","idList","ids","locations","place_id","prepareIoiList","locationsList","iois","loc","ioi","getNearby","categories","join","categoryList","boundingBox","boundingBoxCoordinates","localCategories","Items","newItem","placeId","title","address","phone","closingTime","closingTimes","day","distance","getDistance","geometry","lat","lng","category","mobCount","largest","getThings","getByType","searchString","getPeople","addItem","source","FilterText","formattedRatingCount","totalCount","$interval","$cordovaGeolocation","lodash","lastError","lastWatchChange","placeTypes","getClosingTimes","openingHours","periods","length","open","close","range","reduce","times","period","time","isValid","format","locationSearch","onlyEstablishments","autocomplete","google","maps","places","AutocompleteService","types","radius","LatLng","getPlacePredictions","results","PlacesServiceStatus","OK","error","log","watchId","getCoordinates","geocoder","Geocoder","geocode","GeocoderStatus","getPlaceName","country","components","address_components","i","j","short_name","long_name","pieces","fetchLocations","PlacesService","nearbySearch","rankBy","RankBy","DISTANCE","addr","vicinity","ratingType","ratingCount","setLocations","init","clearWatch","watchPosition","enableHighAccuracy","JSON","stringify","now","Date","ANALYTICS_ENABLE_LOCATION_SENT","fetchPlaceTypes","checkGoogleAvailability","cancel","getPlaceDetails","getDetails","place","geolib","convertUnit","ObservationService","$cordovaDialogs","S3Service","placeToView","send","observation","thumbnailLink","photoLink","formatted_address","formatted_phone_number","opening_hours","substring","uploadPhoto","blob","Location","feedType","imageUrl","sendTapSuccess","sendTapFailure","observationFeed","movementFeed","upvotedObservationFeed","friendFeed","cogIds","el","onLocation","mobsOnly","observationDetails","observationId","upvoteCount","upvotedMobId","hasSeenNudge","promptToEnable","PUSH_NOTIFICATION_REMINDER_SEEN","alert","getTapsForLocation","getMobsForLocation","getRelatedTaps","combinedDescription","getMobs","searchMobs","ionic","Platform","takeProfilePicture","uploadProfilePicture","setProfilePicture","useFacebookProfilePicture","EnableNotificationModalService","hasSubscribed","subscribe","getItem","setItem","showModal","PushNotification","android","senderID","icon","iconColor","ios","registrationId","go","token","platform","isUndefined","hasPermission","isEnabled","bucket","S3","Bucket","upload","Key","Body","ContentType","value","isFbSharingEnabledDefault","TabsService","tabsActive","userInfo","component","bindings","joinMob","mobs","ObservationModalService","openMovement","ftNavSelector","selectedClass","index","$observe","navCtrl","$eval","$ionicModal","$new","modal","remove","confirm","fromTemplateUrl","backdropClickToClose","ObservationModalController","self","closeModal","activate","ctx_locName","ctx_locAddress","ctx_sentiment","ctx_postDate","ctx_numJoins","TapDetailsModalController","$ionicLoading","TapDetailsModalService","hasPlace","loaded","tapScreen","viewMobs","getDetailsPromise","getListPromise","all","finally","clear","openLocationTap","showTapDetails","showMobDetails","animation","AuthController","$stateParams","useFacebook","toggleFacebook","splashscreen","MainController","$scope","sendObservation","tabHandlers","requestLocationsHandler","errorLocations","getPictureHandler","nativeUri","setPicture","getThingsTimeout","getThingsHandler","setThings","resultsObj","idx","getThingsError","getPeopleTimeout","getPeopleHandler","setPeople","getPeopleError","addItemHandler","addItemSuccess","addItemFailure","locationSearchTimeout","locationSearchHandler","locationSearchSuccess","description","locationSearchFailure","getLocationRatingResponsesHandler","setLocationRatingResponses","comments","numReviews","sum","sendTapHandler","commentsObj","selectedState","recordTapDurationHandler","joinMobHandler","joinMobSuccess","analyticsEventHandler","tapMoodHandler","mood","addItemButtonTappedHandler","search","tapSearchHandler","OnboardingController","showLocationScreen","sliderDelegate","prevButton","nextButton","activateLocationServices","$digest","LoginController","SignupController","facebookSignup","validateLength","validateNumber","validateCapital","validateLower","validateSpecial","validateMatch","validateExists","validateAlphanum","form","message","$setValidity","test","value1","value2","SignupSuccessController","getLink","buttonIndex","href","FeedController","feedItems","loading","currentFeed","fetchFeedsMine","fetchFeedsFriends","showItem","feed","MobsController","$ionicScrollDelegate","people","things","searchStringCache","isJoiningMob","selectedCategory","displayItems","lastSearchedString","getSelectedCategoryClass","selectCategory","retrievePlaceMobs","$current","selected","$getByHandle","scrollTop","retrieveDefaultMobs","getTypeFromCategory","setDisplayItems","copy","NearbyController","locationResults","locationSearchString","filterLocation","filterCategories","filterPlace","filterRatings","filterMobsOnly","loadLocations","openFilter","selectLocation","viewTaps","getActiveCategories","$broadcast","numMOBs","compact","sort","label","searchObj","current","oldCategories","equals","ratings","ctx_filterCategories","ctx_mobsOnly","ctx_myNetworkOnly","namesObj","ProfileController","$ionicActionSheet","photoLoaded","user","stats","number","choosePhoto","placeName","setPhoto","buttons","text","pop","hideSheet","titleText","cancelText","buttonClicked","takePhoto","facebookPhoto","reader","FileReader","readAsDataURL","TapController","FilterModalController","allActive","checkAllActive","ratingStatus","toggle","toggleAll","toggleRating","isRatingActive","nearbyCtrl","NearbyListController","NearbyMapController","$templateRequest","$compile","DEFAULT_ZOOM","MapIcon","L","DivIcon","className","iconSize","iconAnchor","loveIcon","html","okIcon","hateIcon","noTapsIcon","locationMarkers","currentLocationMarker","currentPosition","canRecenter","centerMap","box","clearMarkers","addMarkers","LatLngBounds","setView","closePopup","latLng","tileLayer","subdomains","attribution","attributionControl","maxZoom","maxNativeZoom","minZoom","addTo","marker","clickable","zIndexOffset","mapBox","getBounds","mapCenter","getCenter","mapLocations","contains","_latlng","ctx_locations","ctx_numLocs","ctx_centerMapLat","ctx_centerMapLong","_icon","removeClass","removeLayer","addMarker","getMarkerByPlaceId","getCurrentMarker","point","latLngToLayerPoint","minDistance","min","otherMarker","distanceTo","setZoom","createPopup","bindPopup","popup","addClass","template","foundMarker","setLatLng","MyMobsController","SettingsController","showDebugInfo","versionNumber","connectToFacebook","disconnectFromFacebook","displayTermsAndConditions"],"mappings":"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","file":"ftap.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    // more stringent uri encoding (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent)\n    // for some reason api gateway will give a nasty error if query params contain !'()*\n    (function () {\n        let standardEncodeURIComponent = encodeURIComponent;\n        encodeURIComponent = string => standardEncodeURIComponent(string).replace(/[!'()*]/g, function (c) {\n            return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n        });\n    })();\n\n    angular\n        .module('ftap', [ 'ionic', 'ui.validate', 'ngLodash', 'ngCordova', 'angularMoment', 'ngclamp-js' ])\n        .config(function ($ionicConfigProvider) {\n            $ionicConfigProvider.tabs.position('bottom');\n            $ionicConfigProvider.tabs.style('standard');\n            $ionicConfigProvider.navBar.alignTitle('center');\n            $ionicConfigProvider.views.maxCache(0);\n        })\n        .run(function (FTAP_CONFIG) {\n            var firstScriptTag = document.getElementsByTagName('script')[0],\n                tag = document.createElement('script');\n\n            tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + FTAP_CONFIG.GOOGLE_API_KEY + '&libraries=places';\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        })\n        .run(function ($ionicPlatform, $cordovaKeyboard) {\n            $ionicPlatform.ready(function() {\n                $cordovaKeyboard.hideAccessoryBar(true);\n                $cordovaKeyboard.disableScroll(true);\n            });\n        })\n        .run(function ($rootScope, $window, $state) {\n            $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams, options){\n                if (angular.isDefined($window.NativeTap) && fromState && fromState.native) {\n                    NativeTap.hide();\n                }\n            });\n        })\n        .run(PushNotificationService => {\n            PushNotificationService.checkIfEnabled().then(PushNotificationService.register);\n        })\n        .run(($ionicPlatform, LocationService) => {\n            if (localStorage.ONBOARDING_COMPLETE) {\n                LocationService.startUp();\n                $ionicPlatform.on('resume', LocationService.startUp);\n            }\n        }).run(($ionicPlatform, AnalyticsService) => {\n            AnalyticsService.recordStart();\n\n            $ionicPlatform.on('resume', AnalyticsService.recordResume);\n        });\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .constant('FTAP_CONFIG', {\n            GOOGLE_API_KEY: '@@GOOGLE_API_KEY',\n            IDENTITY_POOL_ID: '@@IDENTITY_POOL_ID',\n            AWS_REGION: '@@AWS_REGION',\n            USER_POOL_ID: '@@USER_POOL_ID',\n            USER_POOL_ARN: '@@USER_POOL_ARN',\n            USER_POOL_CLIENT_ID: '@@USER_POOL_CLIENT_ID',\n            S3_PHOTO_BUCKET: '@@S3_PHOTO_BUCKET',\n            S3_RESOURCE_BUCKET: '@@S3_RESOURCE_BUCKET',\n            GCM_SENDER_ID: '@@GCM_SENDER_ID',\n            MOBILE_ANALYTICS_APP_ID: '@@MOBILE_ANALYTICS_APP_ID',\n            A_OR_B: '@@A_OR_B',\n            VERSION_NUMBER: '@@VERSION_NUMBER',\n            SHOW_DEBUG_INFO: '@@SHOW_DEBUG_INFO' === 'true',\n        });\n})();\n","(function () {\n    'use strict';\n\n    // adapted from http://stackoverflow.com/questions/17547917/angularjs-image-onload-event\n\n    angular\n        .module('ftap')\n        .directive('onLoad', onLoad);\n\n    onLoad.$inject = ['$parse'];\n\n    function onLoad ($parse) {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attrs) {\n                var fn = $parse(attrs.onLoad);\n\n                element.on('load', function (event) {\n                    scope.$apply(function () {\n                        fn(scope, { $event: event });\n                    });\n                });\n            }\n        };\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .directive('setMapHeight', function($window, PlatformService) {\n            return (scope, element, attrs) => {\n                if (PlatformService.isIOS()) {\n                    /**\n                     * header height: 64px\n                     * nearby subheader: 55px\n                     * bottom tab bar height: 49px\n                     * total deduction: 168px\n                     */\n                    element.css('height', $window.innerHeight - 168 + 'px');\n                }\n\n                if (PlatformService.isAndroid()) {\n                    /**\n                     * header height: 44px\n                     * nearby subheader: 55px\n                     * bottom tab bar height: 49px\n                     * total deduction: 148px\n                     */\n                    element.css('height', $window.innerHeight - 148 + 'px');\n                }\n            }\n        })\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .filter('abs', abs);\n\n    abs.$inject = [];\n\n    function abs () {\n        return input => Math.abs(input);\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .filter('ioisByRating', ioisByRating);\n\n    ioisByRating.$inject = [];\n\n    function ioisByRating () {\n        return (items, rating) => {\n            let filtered = [];\n\n            if (angular.isArray(items)) {\n                items.forEach(item => {\n                    if (item.hasOwnProperty(rating + 'Count') && item[rating + 'Count'] > 0) {\n                        item.count = item[rating + 'Count'];\n                        item.change = item[rating + 'Change'];\n                        filtered.push(item);\n                    }\n                });\n            }\n\n            return filtered;\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .filter('mob', mob);\n\n    mob.$inject = [];\n\n    function mob () {\n        return (items, isActive) => isActive\n            ? items.filter(item => item.isMob)\n            : items;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .filter('rating', rating);\n\n    rating.$inject = [];\n\n    function rating () {\n        /**\n         * `options` will look like { love: true, ok: true, hate: false }\n         */\n        return (items, options) => options\n            ? items.filter(\n                item => Object.keys(options).filter(key => options[key]).indexOf(item.rating) !== -1\n            )\n            : items;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .filter('shortNumber', shortNumber);\n\n    shortNumber.$inject = ['$window', '$filter'];\n\n    function shortNumber ($window, $filter) {\n        return input => input >= 10000\n            ? $window.shortNumber(input)\n            : $filter('number')(input);\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .filter('underscoreToSpace', underscoreToSpace);\n\n    underscoreToSpace.$inject = [];\n\n    function underscoreToSpace () {\n        return input => {\n            input = input + ''; // cast to string\n            return input.replace(/_/g, ' ');\n        };\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .config(routes);\n\n    routes.$inject = ['$stateProvider', '$urlRouterProvider', 'FTAP_CONFIG'];\n\n    /**\n     * Resolve routes to check whether the user is logged in. This also\n     * reauthenticates the user (if possible) to allow them to use any route\n     *\n     * Users are kicked out of auth routes if they are logged in and kicked\n     * out of main routes if they are logged out\n     */\n    const reauthResolver = {\n        isLoggedInFacebook: [\n            '$ionicPlatform', 'AuthService', 'FacebookService', 'UserService',\n            ($ionicPlatform, AuthService, FacebookService, UserService) => (\n                $ionicPlatform.ready().then(() =>\n                FacebookService.hasPlugin()\n                    ? AuthService.checkFacebookLoginStatus()\n                        .then(() => true)\n                        .catch(() => false)\n                    : false\n                )\n            )\n        ],\n        isAnonymous: [\n            'AuthService', 'UserService', 'isLoggedInFacebook',\n            (AuthService, UserService, isLoggedInFacebook) => (\n                isLoggedInFacebook\n                    ? false\n                    : AuthService.anonymousLogin()\n                        .then(() => true)\n                        .catch(() => false)\n            )\n        ]\n    };\n\n    function routes ($stateProvider, $urlRouterProvider, FTAP_CONFIG) {\n        const USE_CONFIG_A = FTAP_CONFIG.A_OR_B !== 'b';\n\n        $stateProvider\n            // onboarding\n            .state('onboarding', {\n                url: '/onboarding',\n                templateUrl: 'app/routes/onboarding/onboarding.html',\n                controller: 'OnboardingController',\n                controllerAs: 'onboardCtrl',\n            })\n\n            // login parent state\n            .state('auth', {\n                url: '/auth',\n                abstract: true,\n                params: {\n                    reload: null\n                },\n                templateUrl: 'app/routes/auth/auth.html',\n                controller: 'AuthController',\n                controllerAs: 'authCtrl',\n                resolve: reauthResolver,\n            })\n\n                // signup\n                .state('auth.signup', {\n                    url: '/signup',\n                    templateUrl: 'app/routes/auth/signup/signup.html',\n                    controller: 'SignupController',\n                    controllerAs: 'signupCtrl'\n                })\n\n                // signup success\n                .state('auth.signup-success', {\n                    url: '/success',\n                    params: { hasFacebook: null },\n                    cache: false,\n                    templateUrl: 'app/routes/auth/signup-success/signup-success.html',\n                    controller: 'SignupSuccessController',\n                    controllerAs: 'successCtrl'\n                })\n\n                // login\n                .state('auth.login', {\n                    url: '/login',\n                    templateUrl: 'app/routes/auth/login/login.html',\n                    controller: 'LoginController',\n                    controllerAs: 'loginCtrl'\n                })\n\n            // main parent state\n            .state('main', {\n                url: '/main',\n                abstract: true,\n                templateUrl: 'app/routes/main/main.html',\n                controller: 'MainController',\n                controllerAs: 'mainCtrl',\n                resolve: reauthResolver,\n            })\n\n                // tap\n                .state('main.tap', {\n                    url: '/tap',\n                    views: {\n                        'main-tap': {\n                            templateUrl: 'app/routes/main/tap/tap.html',\n                            controller: 'TapController',\n                            controllerAs: 'tapCtrl'\n                        }\n                    },\n                    native: true,\n                    resolve: {\n                        native: ['$q', '$ionicPlatform', '$timeout', '$window', 'TapParamsService', function ($q, $ionicPlatform, $timeout, $window, TapParamsService) {\n                            var deferred = $q.defer();\n                            $ionicPlatform.ready(function () {\n                                if (angular.isDefined($window.NativeTap) && !TapParamsService.hasParams()) {\n                                    NativeTap.show(function () {\n                                        deferred.resolve();\n                                    }, null, { reInitialize: false, showCoachMarks: !localStorage.COACH_MARKS_SEEN });\n                                } else {\n                                    $timeout(function () {\n                                        deferred.resolve();\n                                    });\n                                }\n                            });\n\n                            return deferred.promise;\n                        }]\n                    },\n                })\n\n                // nearby\n                .state('main.nearby', {\n                    url: '/nearby',\n                    abstract: true,\n                    views: {\n                        'main-nearby': {\n                            templateUrl: 'app/routes/main/nearby/nearby.html',\n                            controller: 'NearbyController',\n                            controllerAs: 'nearbyCtrl'\n                        }\n                    }\n                })\n\n                // mobs\n                .state('main.mobs', {\n                    url: '/mobs',\n                    views: {\n                        'main-mobs': {\n                            templateUrl: 'app/routes/main/mobs/mobs.html',\n                            controller: 'MobsController',\n                            controllerAs: 'mobsCtrl'\n                        }\n                    }\n                })\n\n                // feed\n                .state('main.feed', {\n                    url: '/feed',\n                    params: { tapCreated: null },\n                    views: {\n                        'main-feed': {\n                            templateUrl: 'app/routes/main/feed/feed.html',\n                            controller: 'FeedController',\n                            controllerAs: 'feedCtrl'\n                        }\n                    }\n                })\n\n                // profile\n                .state('main.profile', {\n                    url: '/profile',\n                    abstract: true,\n                    views: {\n                        'main-profile': {\n                            templateUrl: 'app/routes/main/profile/profile.html',\n                            controller: 'ProfileController',\n                            controllerAs: 'profileCtrl'\n                        }\n                    }\n                });\n\n        const nearbySubstates = [\n            {\n                name: 'main.nearby.map',\n                config: {\n                    url: '/map',\n                    templateUrl: 'app/routes/main/nearby/nearby-map/nearby-map.html',\n                    controller: 'NearbyMapController',\n                    controllerAs: 'mapCtrl'\n                },\n            },\n            {\n                name: 'main.nearby.list',\n                config: {\n                    url: '/list',\n                    templateUrl: 'app/routes/main/nearby/nearby-list/nearby-list.html',\n                    controller: 'NearbyListController',\n                    controllerAs: 'listCtrl'\n                },\n            },\n        ];\n\n        const profileSubstates = [\n            {\n                name: 'main.profile.my-mobs',\n                config: {\n                    url: '/my-mobs',\n                    templateUrl: 'app/routes/main/profile/my-mobs/my-mobs.html',\n                    controller: 'MyMobsController',\n                    controllerAs: 'mobsCtrl'\n                },\n            },\n            {\n                name: 'main.profile.settings',\n                config: {\n                    url: '/settings',\n                    templateUrl: 'app/routes/main/profile/settings/settings.html',\n                    controller: 'SettingsController',\n                    controllerAs: 'settingsCtrl'\n                },\n            },\n        ];\n\n        const substatesList = [\n            {\n                url: '/main/nearby',\n                states: nearbySubstates,\n            },\n            {\n                url: '/main/profile',\n                states: profileSubstates,\n            },\n        ];\n\n        // Apply state definitions for all substates. Substate definitions are\n        // used below to set the default substate based on previous selection\n        // with sub tabs\n        substatesList.forEach(substateDefinitionList => {\n            // When hitting the abstract state, transition to the last `active`\n            // substate. If none, transition to the first substate in the list\n            const substateDefinitions = substateDefinitionList.states;\n            $urlRouterProvider.when(substateDefinitionList.url, $state => {\n                const substates = substateDefinitions.map(state => $state.get(state.name));\n                $state.transitionTo(substates.find(state => state.active) || substates[0], {});\n            });\n\n            // For each group of substates...\n            substateDefinitions.forEach(substateDefinition => {\n                // Create the substate for the router\n                // Set the substate as `active` when the state is entered. All\n                // other substates in this group should be marked inactive\n                substateDefinition.config.onEnter = $state => {\n                    substateDefinitions.forEach(stateDefinition => $state.get(stateDefinition.name).active = false);\n                    $state.get(substateDefinition.name).active = true;\n                };\n\n                // Create the state\n                $stateProvider.state(substateDefinition.name, substateDefinition.config)\n            })\n        });\n\n        // if none of the above states are matched, use this as the fallback\n        $urlRouterProvider.otherwise('/auth/signup');\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('AnalyticsService', AnalyticsService);\n\n    AnalyticsService.$inject = ['$injector', 'FTAP_CONFIG', 'AuthService', 'UserService', 'SharingService'];\n\n    // AWS config credentials are set when AuthService is instantiated\n    function AnalyticsService($injector, FTAP_CONFIG, AuthService, UserService, SharingService) {\n        const service = {\n            client: new AMA.Manager({\n                appId: FTAP_CONFIG.MOBILE_ANALYTICS_APP_ID,\n            })\n        };\n\n        const APP_NAME = 'Forrester TAP';\n\n        service.recordStart = () => {\n            service.client.recordEvent('appStart');\n        };\n\n        service.recordResume = () => {\n            service.client.recordEvent('appResume');\n        };\n\n        service.recordTap = duration => {\n            service.client.recordEvent('tapSubmitted', {}, { duration });\n        };\n\n        /**\n         * screenNames:\n         * <Splash, FB Signup, Email Signup, Success, FB Login, Email Login,\n         *  Main TAP, Love TAP, OK TAP, Hate TAP, Love Location, Location Details,\n         *  Map View, Map Filter, Map Detail, MOBs View, MOBs Filter, My Feed, Post,\n         *  MOBs, Settings>\n         */\n\n        service.recordEvent = (eventType, screenName, attributes, metrics) => {\n            let LocationService = $injector.get('LocationService');\n            let locationMetrics = LocationService.hasLocation\n                ? {\n                    profile_location_enabled: 1,\n                    session_location_lat: LocationService.lastKnownLocation.coords.latitude,\n                    session_location_lon: LocationService.lastKnownLocation.coords.longitude\n                }\n                : {\n                    profile_location_enabled: 0,\n                };\n\n            let sharing = SharingService.facebook ? 1 : 0;\n\n            service.client.recordEvent(\n                eventType,\n                angular.extend({\n                    \"profile_signupDate\": UserService.timestamp || \"N/A\",\n                    \"profile_gender\": UserService.gender || \"N/A\",\n                    \"profile_city\": UserService.city || \"N/A\",\n                    \"profile_birthYear\": UserService.birthYear || \"N/A\",\n                    \"ctx_screenName\": screenName,\n                    \"ctx_appName\": APP_NAME,\n                }, attributes || {}),\n                angular.extend(locationMetrics, {\n                    \"profile_LOVEs\": UserService.loveCount,\n                    \"profile_OKs\": UserService.okCount,\n                    \"profile_HATEs\": UserService.hateCount,\n                    \"profile_shareFB\": sharing,\n                    \"profile_notifications_enabled\": UserService.notifs,\n                }, metrics || {})\n            );\n        };\n\n        service.screenView = screenName => {\n            service.recordEvent('SCREENVIEW', screenName);\n        };\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('ApiService', ApiService);\n\n    ApiService.$inject = ['$q', '$injector'];\n\n    function ApiService ($q, $injector) {\n        const service = {};\n\n        service.request = (verb, params, body, additionalParams) => $q((resolve, reject) => {\n            if (AWS.config.credentials.needsRefresh()) {\n                // the below method of credential refreshing should only work for unauthenticated users\n\n                AWS.config.credentials.refresh(err => {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    service.request(verb, params, body, additionalParams).then(resolve).catch(reject);\n                });\n\n                // below is for facebook/email auth\n\n                /* const AuthService = $injector.get('AuthService');\n\n                if (AuthService.isUsingFacebook()) {\n                    AuthService.checkFacebookLoginStatus()\n                    .then(result =>\n                        service.request(verb, params, body, additionalParams).then(resolve).catch(reject)\n                    )\n                    .catch(reject);\n                } else {\n                    AuthService.checkEmailLoginStatus()\n                    .then(result =>\n                        service.request(verb, params, body, additionalParams).then(resolve).catch(reject)\n                    )\n                    .catch(reject);\n                } */\n            } else {\n                let apigClient = apigClientFactory.newClient({\n                    accessKey: AWS.config.credentials.accessKeyId,\n                    secretKey: AWS.config.credentials.secretAccessKey,\n                    sessionToken: AWS.config.credentials.sessionToken\n                });\n\n                if (angular.isDefined(apigClient[verb])) {\n                    apigClient[verb](params, body, additionalParams).then(resolve).catch(reject);\n                } else {\n                    reject(\"Verb not defined in API Gateway\");\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n","/*global AWS AWSCognito*/\n(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('AuthService', AuthService);\n\n    AuthService.$inject = ['$window', '$q', 'FTAP_CONFIG', 'FacebookService', 'ApiService', 'UserService', 'ProfilePictureService'];\n\n    function AuthService ($window, $q, FTAP_CONFIG, FacebookService, ApiService, UserService, ProfilePictureService) {\n        AWS.config.region = FTAP_CONFIG.AWS_REGION;\n        AWS.config.logger = console;\n        initializeAWSCredentials();\n\n        AWSCognito.config.region = FTAP_CONFIG.AWS_REGION;\n        AWSCognito.config.credentials = new AWS.CognitoIdentityCredentials({\n            IdentityPoolId: FTAP_CONFIG.IDENTITY_POOL_ID,\n            RoleArn: FTAP_CONFIG.USER_POOL_ARN\n        });\n\n        // dummy data, necessary for user pools that don't allow unauthenticated access\n        AWSCognito.config.update({\n            accessKeyId: 'anything',\n            secretAccessKey: 'anything'\n        });\n\n        const poolData = {\n            UserPoolId: FTAP_CONFIG.USER_POOL_ID,\n            ClientId: FTAP_CONFIG.USER_POOL_CLIENT_ID,\n            Paranoia: 7\n        };\n\n        const userPool = new AWSCognito.CognitoIdentityServiceProvider.CognitoUserPool(poolData);\n\n        const service = {\n            anonymousLogin,\n            emailSignup,\n            emailLogin,\n            facebookAuth,\n            facebookLink,\n            facebookUnlink,\n            checkFacebookLoginStatus,\n            checkEmailLoginStatus,\n            logOut,\n            isUsingFacebook,\n            isUsingEmail\n        };\n\n        return service;\n\n        ///\n\n        function anonymousLogin () {\n            return $q(\n                (resolve, reject) => {\n                    initializeAWSCredentials();\n\n                    AWS.config.credentials.get(err => {\n                        if (err) {\n                            reject(err);\n                        } else {\n                            UserService.registerUser(null, null, null, null);\n                            resolve();\n                        }\n                    })\n                }\n            );\n        }\n\n        function emailSignup (name, email, username, password) {\n            const deferred = $q.defer();\n\n            userPool.signUp(username, password, [\n                new AWSCognito.CognitoIdentityServiceProvider.CognitoUserAttribute({\n                    Name: 'name',\n                    Value: name\n                }),\n\n                new AWSCognito.CognitoIdentityServiceProvider.CognitoUserAttribute({\n                    Name: 'email',\n                    Value: email\n                }),\n\n                new AWSCognito.CognitoIdentityServiceProvider.CognitoUserAttribute({\n                    Name: 'preferred_username',\n                    Value: username\n                })\n            ], null, (err, result) => {\n                if (err) {\n                    deferred.reject(err);\n                }\n\n                UserService.username = username;\n                UserService.email = email;\n\n                deferred.resolve(result);\n            });\n\n            return deferred.promise\n                .then(() => emailLogin(username, password, true))\n                .then(() => UserService.registerUser(null, email, null, username));\n        }\n\n        function emailLogin (username, password, skipRegister) {\n            const deferred = $q.defer();\n            const cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser({\n                Username: username,\n                Pool: userPool\n            });\n\n            cognitoUser.authenticateUser(\n                new AWSCognito.CognitoIdentityServiceProvider.AuthenticationDetails({\n                    Username: username,\n                    Password: password,\n                }),\n\n                {\n                    onSuccess: result => {\n                        UserService.username = username;\n\n                        AWS.config.credentials.params.Logins = {};\n                        AWS.config.credentials.params.Logins['cognito-idp.' + FTAP_CONFIG.AWS_REGION + '.amazonaws.com/' + FTAP_CONFIG.USER_POOL_ID] = result.idToken.jwtToken;\n                        AWS.config.credentials.expired = true;\n\n                        AWS.config.credentials.get(err => {\n                            // TODO this should probably be handled in one spot\n                            // with the actual response\n                            UserService.cogId = AWS.config.credentials.identityId;\n                            if (err) {\n                                cognitoUser.signOut();\n                                deferred.reject(err);\n                            } else {\n                                deferred.resolve();\n                            }\n                        });\n                    },\n\n                    onFailure: err => deferred.reject(err),\n                }\n            );\n\n            return skipRegister\n                ? deferred.promise\n                : deferred.promise\n                    .then(() => UserService.registerUser(null, null, null, username))\n                    .then(response => {\n                        if (response.data.socialid) {\n                            return $q((resolve, reject) => checkFacebookLoginStatus()\n                                .then(resolve)\n                                .catch(() => facebookAuth().then(resolve).catch(reject))\n                            );\n                        } else {\n                            return response;\n                        }\n                    });\n        };\n\n        function facebookAuth () {\n            return facebookLogin()\n            .then(() => FacebookService.getMyInfo())\n            .then(info => {\n                UserService.birthYear = info.birthday.split(\"/\")[2];\n                UserService.city = info.location.name.split(\",\")[0];\n                UserService.email = info.email;\n                UserService.gender = info.gender;\n                UserService.location = info.location.name;\n                UserService.name = info.name;\n                UserService.socialId = info.id;\n\n                return UserService.registerUser(\n                    info.id,\n                    info.email,\n                    ProfilePictureService.getFacebookProfilePictureUrl(),\n                    info.username\n                );\n            });\n        };\n\n        function facebookLink () {\n            return facebookLogin()\n                .then(() => FacebookService.getMyInfo())\n                .then(info => {\n                    UserService.birthYear = info.birthday.split(\"/\")[2];\n                    UserService.city = info.location.name.split(\",\")[0];\n                    UserService.email = info.email;\n                    UserService.gender = info.gender;\n                    UserService.location = info.location.name;\n                    UserService.name = info.name;\n                    UserService.socialId = info.id;\n\n                    return UserService.updateSocialId(ProfilePictureService.getFacebookProfilePictureUrl());\n                })\n                .catch(err => {\n                    // clear out facebook info if link failed\n                    UserService.birthYear = null;\n                    UserService.city = null;\n                    UserService.email = null;\n                    UserService.gender = null;\n                    UserService.location = null;\n                    UserService.name = null;\n                    UserService.socialId = null;\n                    UserService.timestamp = null;\n\n\n                    return $q.reject(err);\n                });\n        }\n\n        function facebookUnlink () {\n            return $q(\n                resolve => facebookConnectPlugin.logout(resolve, resolve)\n            )\n            .then(() => $q(\n                (resolve, reject) => {\n                    let cognitoidentity = new AWS.CognitoIdentity();\n\n                    // NOTE: Doing this unlink disables the current Cognito identityId, so a new one is generated.\n                    // Essentially, this means that the user is starting a new anonymous account. This is a feature of\n                    // Cognito, not a bug; it's a security risk to have an account go from unauthenticated access to\n                    // authenticated access only and then back to unauthenticated access.\n                    cognitoidentity.unlinkIdentity({\n                        IdentityId: AWS.config.credentials.identityId,\n                        Logins: AWS.config.credentials.params.Logins,\n                        LoginsToRemove: [ 'graph.facebook.com' ]\n                    }, (err, data) => err ? reject(err) : resolve(data));\n                }\n            ))\n            .then(() => {\n                UserService.birthYear = null;\n                UserService.city = null;\n                UserService.email = null;\n                UserService.gender = null;\n                UserService.location = null;\n                UserService.name = null;\n                UserService.socialId = null;\n                UserService.timestamp = null;\n\n                delete AWS.config.credentials.params.Logins['graph.facebook.com'];\n            });\n        }\n\n        function facebookLogin () {\n            return $q((resolve, reject) => {\n                facebookConnectPlugin.logout(doLogin, doLogin); // make sure the user is actually logged out before attempting login\n                                                                // (otherwise, an error will be thrown)\n                function doLogin () {\n                    facebookConnectPlugin.login(\n                        [ 'public_profile', 'user_friends', 'email' ],\n\n                        result => {\n                            AWS.config.credentials.params.Logins = AWS.config.credentials.params.Logins || {};\n                            AWS.config.credentials.params.Logins['graph.facebook.com'] = result.authResponse.accessToken;\n                            AWS.config.credentials.expired = true;\n\n                            AWS.config.credentials.get(err => {\n                                if (err) {\n                                    reject(err);\n                                } else {\n                                    resolve();\n                                }\n                            });\n\n                            // Native Tap should display Facebook sharing slider\n                            if ($window.NativeTap) {\n                                NativeTap.setProfileSettings({\n                                    isLoggedInFacebook: true,\n                                });\n                            }\n                        },\n\n                        reject\n                    );\n                }\n            })\n        }\n\n        function checkFacebookLoginStatus () {\n            return $q(\n                (resolve, reject) => FacebookService\n                    .checkLoginStatus()\n                    .then(result => {\n                        if (result.authResponse) {\n                            AWS.config.credentials.params.Logins = {\n                                'graph.facebook.com': result.authResponse.accessToken\n                            };\n                            AWS.config.credentials.expired = true;\n\n                            AWS.config.credentials.get(err => {\n                                if (err) {\n                                    reject(err);\n                                } else {\n                                    resolve();\n                                }\n                            });\n                        } else {\n                            reject(result);\n                        }\n                    })\n                    .catch(reject)\n            )\n            .then(() => FacebookService.getMyInfo())\n            .then(info => {\n                UserService.birthYear = info.birthday.split(\"/\")[2];\n                UserService.city = info.location.name.split(\",\")[0];\n                UserService.email = info.email;\n                UserService.gender = info.gender;\n                UserService.location = info.location.name;\n                UserService.name = info.name;\n                UserService.socialId = info.id;\n\n                return UserService.registerUser(\n                    info.id,\n                    info.email,\n                    ProfilePictureService.getFacebookProfilePictureUrl(),\n                    info.username\n                );\n            });\n        }\n\n        function checkEmailLoginStatus () {\n            return $q((resolve, reject) => {\n                const cognitoUser = userPool.getCurrentUser();\n\n                if (cognitoUser != null) {\n                    cognitoUser.getSession((err, session) => {\n                        if (err) {\n                            cognitoUser.signOut();\n                            return reject(err);\n                        }\n\n                        AWS.config.credentials.params.Logins = {};\n                        AWS.config.credentials.params.Logins['cognito-idp.' + FTAP_CONFIG.AWS_REGION + '.amazonaws.com/' + FTAP_CONFIG.USER_POOL_ID] = session.idToken.jwtToken;\n                        AWS.config.credentials.expired = true;\n\n                        AWS.config.credentials.get(err => {\n                            if (err) {\n                                cognitoUser.signOut();\n                                return reject(err);\n                            }\n\n                            return resolve(cognitoUser.getUsername());\n                        });\n                    })\n                } else {\n                    reject();\n                }\n            })\n            .then(username => {\n                UserService.username = username;\n                return UserService.registerUser(null, null, null, username);\n            });\n        }\n\n        function logOut () {\n            return $q((resolve, reject) => {\n                if (service.isUsingEmail()) {\n                    userPool.getCurrentUser().signOut();\n                }\n\n                if (service.isUsingFacebook()) {\n                    facebookConnectPlugin.logout(\n                        () => {\n                            initializeAWSCredentials();\n                            resolve();\n\n                            // Native Tap should not display Facebook sharing slider\n                            if ($window.NativeTap) {\n                                NativeTap.setProfileSettings({\n                                    isLoggedInFacebook: false,\n                                });\n                            }\n                        },\n\n                        reject\n                    );\n                } else {\n                    initializeAWSCredentials();\n                    resolve();\n                }\n            });\n        }\n\n        function isUsingFacebook () {\n            return AWS.config.credentials\n                && AWS.config.credentials.params\n                && AWS.config.credentials.params.Logins\n                && AWS.config.credentials.params.Logins['graph.facebook.com'];\n        }\n\n        function isUsingEmail () {\n            return AWS.config.credentials\n                && AWS.config.credentials.params\n                && AWS.config.credentials.params.Logins\n                && AWS.config.credentials.params.Logins['cognito-idp.' + FTAP_CONFIG.AWS_REGION + '.amazonaws.com/' + FTAP_CONFIG.USER_POOL_ID]\n        }\n\n        function initializeAWSCredentials () {\n            AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n                IdentityPoolId: FTAP_CONFIG.IDENTITY_POOL_ID\n            });\n            // the line below is needed for the current facebook/user pools auth implementation, but not cognito unauth\n            // AWS.config.credentials.clearCachedId();\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('CameraService', CameraService);\n\n    CameraService.$inject = ['$q', '$window'];\n\n    function CameraService ($q, $window) {\n        const service = {};\n\n        service.getPicture = () => $q((resolve, reject) =>\n            $window.navigator.camera.getPicture(resolve, reject, {\n                quality: 30,\n                destinationType: $window.Camera.DestinationType.FILE_URI,\n                correctOrientation: true\n            })\n        );\n\n        service.cleanup = () => $q((resolve, reject) =>\n            $window.navigator.camera.cleanup(resolve, reject)\n        );\n\n        service.crop = (imageUri, width, height, returnBlob) => $q((resolve, reject) => {\n            try {\n                const image = document.createElement('img');\n                const canvas = document.createElement('canvas');\n                const context = canvas.getContext('2d');\n\n                canvas.width = width;\n                canvas.height = height;\n\n                image.src = imageUri;\n                image.onload = () => {\n                    const scale = Math.max(canvas.width / image.width, canvas.height / image.height);\n                    context.drawImage(\n                        image,\n                        (canvas.width - (image.width * scale)) / 2,\n                        (canvas.height - (image.height * scale)) / 2,\n                        image.width * scale,\n                        image.height * scale\n                    );\n\n                    if (returnBlob) {\n                        canvas.toBlob(resolve, 'image/png');\n                    } else {\n                        resolve(canvas.toDataURL('image/png'));\n                    }\n                };\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        return service;\n    }\n})();\n","/**\n * Fetch and assign sample responses from API\n */\n(function() {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('CannedResponseService', CannedResponseService)\n\n    CannedResponseService.$inject = ['$http', '$q', '$filter', 'FTAP_CONFIG', 'ApiService']\n\n    function CannedResponseService ($http, $q, $filter, FTAP_CONFIG, ApiService) {\n        const service = {};\n\n        service.defaultResponses = { // fallback\n            'love': [\n                'One of my favorites',\n                'Absolutely fantastic!',\n                'Highly recommended',\n                'Better than the others'\n            ],\n\n            'ok': [\n                'Just alright',\n                'Neither good nor bad',\n                'Not the greatest',\n                'Could take it or leave it'\n            ],\n\n            'hate': [\n                'Terrible, just terrible',\n                'Avoid if you can',\n                'Would not recommend at all',\n                'No thanks'\n            ]\n        };\n\n        service.getResponses = (ioiId, rating) => {\n            if (Object.keys(service.defaultResponses).indexOf(rating) === -1) {\n                return $q.reject('Please provide a valid rating (\"love\"/\"ok\"/\"hate\")');\n            }\n\n            let queryParams = { ioiId, rating };\n\n            return ApiService.request('observationOtherResponsesGet', queryParams, {}, { queryParams })\n                .then(response => response.data.data)\n                .catch(err => service.defaultResponses[rating].map(phrase => ({ phrase, count: 0 })))\n                .then(responses => responses.map(\n                    response => ({\n                        phrase: response.phrase,\n                        count: response.count,\n                        formattedCount: $filter('shortNumber')(response.count),\n                        formattedCountPlusOne: $filter('shortNumber')(response.count + 1),\n                        isMob: !!response.isMob,\n                        mobId: response.mobId || '',\n                        isMobMember: !!response.isMobMember\n                    })\n                ));\n        }\n\n        return service;\n    }\n\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('FacebookService', FacebookService);\n\n    FacebookService.$inject = ['$q', '$window', 'ApiService', 'UserService'];\n\n    function FacebookService ($q, $window, ApiService, UserService) {\n        const service = {};\n\n        service.hasPlugin = () => angular.isDefined($window.facebookConnectPlugin);\n\n        service.checkLoginStatus = () => $q(\n            (resolve, reject) => {\n                if (service.hasPlugin()) {\n                    facebookConnectPlugin.getLoginStatus(\n                        result => {\n                            if (result.status === 'connected') {\n                                resolve(result);\n                            } else if (result.status === 'not_authorized') {\n                                // the user is logged in to Facebook, but has not authenticated\n                                reject(result);\n                            } else {\n                                // the user isn't logged in to Facebook\n                                reject(result);\n                            }\n                        },\n                        reject\n                    )\n                } else {\n                    reject();\n                }\n            }\n        );\n\n        service.getFriends = () => $q(\n            (resolve, reject) => {\n                if (service.hasPlugin()) {\n                    // TODO verify that paging works... need a lot of friends for that!\n                    const friends = [];\n                    const getPage = (url, done) => {\n                        facebookConnectPlugin.api(url, [ 'user_friends' ],\n                            result => {\n                                Array.prototype.push.apply(friends, result.data);\n\n                                if (result && result.paging && result.paging.next) {\n                                    getPage(result.paging.next, done);\n                                } else {\n                                    done(true);\n                                }\n                            },\n                            error => done(false)\n                        )\n                    };\n\n                    getPage('/me/friends', success => {\n                        if (success) {\n                            resolve(friends);\n                        } else {\n                            reject();\n                        }\n                    });\n                } else {\n                    reject();\n                }\n            }\n        );\n\n        service.updateFriends = friends =>\n            ApiService.request('addfollowersfromsocialPost', {}, {\n                Idlist: friends.map(friend => friend.id),\n                type: 'facebook'\n            })\n            .then(response => UserService.friends = response.data.Attributes.friends || []);\n\n        service.getMyInfo = () => $q(\n            (resolve, reject) => {\n                if (service.hasPlugin()) {\n                    facebookConnectPlugin.api('/me?fields=name,email,location,gender,birthday', [ 'email', 'user_location', 'user_birthday' ], resolve, reject);\n                } else {\n                    reject('Facebook plugin not present');\n                }\n            }\n        );\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('ImageUriService', ImageUriService);\n\n    ImageUriService.$inject = [];\n\n    function ImageUriService () {\n        const service = {};\n\n        service.currentImageUri = null;\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('IOIService', IOIService);\n\n    IOIService.$inject = ['$q', '$filter', 'moment', 'ApiService', 'LocationService'];\n\n    function IOIService ($q, $filter, moment, ApiService, LocationService) {\n        const service = {};\n\n        service.currentIois = [];\n\n        service.getIoisForIds = ids => {\n            if (LocationService.hasLocation) {\n                let queryParams = {\n                    idList: ids || LocationService.locations.map(location => location.place_id)\n                };\n\n                return ApiService.request('ioiGet', queryParams, {}, { queryParams });\n            } else {\n                return $q.reject('Location not available');\n            }\n        }\n\n        service.prepareIoiList = iois => {\n            let locationsList = LocationService.locations.map(loc => {\n                iois.forEach(ioi => {\n                    if (loc.place_id == ioi.ioiId) {\n                        loc.ioi = ioi;\n                    }\n                });\n                return loc;\n            });\n            return locationsList;\n        };\n\n        service.getNearby = (coords, categories) => {\n            if (coords) {\n                // good to go!\n            } else if (LocationService.hasLocation) {\n                coords = LocationService.lastKnownLocation.coords;\n            } else {\n                return $q.reject('Location not available');\n            }\n\n            return ApiService.request('ioiRecommendedGet', {\n                location: [ coords.latitude, coords.longitude ].join(','),\n                categoryList: categories.join(',')\n            }).then(response => ({\n                boundingBox: response.data.boundingBoxCoordinates,\n                categories: response.data.localCategories,\n                items: response.data.Items.map(item => {\n                    let newItem = {\n                        placeId: item.ioiId,\n                        ioiId: item.ioiId,\n                        title: item.title,\n                        address: item.address || '',\n                        phone: item.phone || '',\n                        loveCount: item.loveCount || 0,\n                        okCount: item.okCount || 0,\n                        hateCount: item.hateCount || 0,\n                        closingTime: item.closingTimes\n                            ? (item.closingTimes[moment().day()])\n                            : false,\n                        distance: LocationService.getDistance(item.geometry.location.lat, item.geometry.location.lng),\n                        categories: (item.category || '').split(','),\n                        coords: {\n                            latitude: item.geometry.location.lat,\n                            longitude: item.geometry.location.lng\n                        },\n                        isMob: item.mobCount > 0\n                    };\n\n                    newItem.count = newItem.loveCount + newItem.okCount + newItem.hateCount;\n\n                    let largest = Math.max(newItem.loveCount, newItem.okCount, newItem.hateCount);\n\n                    if (largest === newItem.loveCount) {\n                        newItem.rating = 'love';\n                    } else if (largest === newItem.okCount) {\n                        newItem.rating = 'ok';\n                    } else if (largest === newItem.hateCount) {\n                        newItem.rating = 'hate';\n                    }\n\n                    return newItem;\n                })\n            }));\n        }\n\n        service.getThings = searchString => {\n            return getByType('thing', searchString);\n        };\n\n        service.getPeople = searchString => {\n            return getByType('person', searchString);\n        }\n\n        service.addItem = item => {\n            /**\n             * `item` should look like { \"type\": \"thing\", \"source\": \"FTAP\", \"title\": \"plane\" }\n             */\n\n            return ApiService\n                .request('ioiPut', null, angular.extend({ source: 'FTAP' }, item))\n                .then(response => response.data);\n        };\n\n        return service;\n\n        function getByType (type, searchString) {\n            searchString = '' + (searchString || ''); // cast to string\n            let queryParams = { type, searchString };\n\n            return ApiService\n                .request('ioiByTypeGet', queryParams, {}, { queryParams })\n                .then(response => {\n                    response.data.FilterText = response.data.FilterText || searchString;\n                    response.data.Items.forEach(\n                        item => item.formattedRatingCount = $filter('shortNumber')(item.totalCount)\n                    );\n\n                    return response.data;\n                });\n        };\n    }\n})();\n","/**\n * Fetch and record locations for Google Places API\n */\n(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('LocationService', LocationService);\n\n    LocationService.$inject = [\n        '$http', '$q', '$timeout', '$window', '$interval', '$cordovaGeolocation', '$injector', '$filter', 'moment',\n        'lodash', 'FTAP_CONFIG', 'AnalyticsService'\n    ];\n\n    function LocationService ($http, $q, $timeout, $window, $interval, $cordovaGeolocation, $injector, $filter, moment,\n        lodash, FTAP_CONFIG, AnalyticsService) {\n        const service = {};\n        // Location list acquired from Google Places\n        service.locations = [];\n        // Keep track of last error when trying to retrieve location list\n        service.lastError = null;\n        // Used for throttling watchPosition updates\n        service.lastWatchChange = 0;\n        // Keep track of user's last known location\n        service.lastKnownLocation = false;\n        // place types to get from Google places\n        // This is the default list, but an updated list is acquired from\n        // S3 upon initialization\n        service.placeTypes = [\n            \"airport\",\n            \"amusement_park\",\n            \"aquarium\",\n            \"bakery\",\n            \"bar\",\n            \"cafe\",\n            \"car_rental\",\n            \"clothing_store\",\n            \"department_store\",\n            \"florist\",\n            \"food\",\n            \"grocery_or_supermarket\",\n            \"gym\",\n            \"hair_care\",\n            \"home_goods_store\",\n            \"jewelry_store\",\n            \"movie_theater\",\n            \"night_club\",\n            \"restaurant\",\n            \"shopping_mall\",\n            \"spa\",\n            \"stadium\",\n            \"store\",\n            \"train_station\",\n            \"zoo\",\n        ];\n\n        /**\n         * Transforms array of business opening hours into an array of closing times for use in map popups. Example:\n         *\n         * Input:\n         *\n         * {\n         *     \"open_now\": true,\n         *     \"periods\": [\n         *         { \"close\": { \"day\": 0, \"time\": \"1700\" }, \"open\": { \"day\": 0, \"time\": \"1000\" } },\n         *         { \"close\": { \"day\": 1, \"time\": \"2200\" }, \"open\": { \"day\": 1, \"time\": \"0800\" } },\n         *         { \"close\": { \"day\": 2, \"time\": \"2200\" }, \"open\": { \"day\": 2, \"time\": \"0800\" } },\n         *         { \"close\": { \"day\": 3, \"time\": \"2200\" }, \"open\": { \"day\": 3, \"time\": \"0800\" } },\n         *         { \"close\": { \"day\": 5, \"time\": \"0200\" }, \"open\": { \"day\": 4, \"time\": \"0800\" } },\n         *         { \"close\": { \"day\": 6, \"time\": \"0200\" }, \"open\": { \"day\": 5, \"time\": \"0800\" } },\n         *         { \"close\": { \"day\": 0, \"time\": \"0200\" }, \"open\": { \"day\": 6, \"time\": \"0800\" } }\n         *     ],\n         *     \"weekday_text\": [ \"Monday: 8:00 AM – 10:00 PM\", \"Tuesday: 8:00 AM – 10:00 PM\", ... ]\n         * }\n         *\n         * Output:\n         *\n         * { 0: \"5:00 PM\", 1: \"10:00 PM\", 2: \"10:00 PM\", 3: \"10:00 PM\", 4: \"2:00 AM\", 5: \"2:00 AM\", 6: \"2:00 AM\" }\n         *\n         * N.B. If a place is open 24 hours, the `periods` will look like so:\n         *\n         * \"periods\" : [\n         *     { \"open\" : { \"day\" : 0, \"time\" : \"0000\" } }\n         * ]\n         */\n\n        service.getClosingTimes = openingHours => {\n            if (openingHours.periods.length === 1 && openingHours.periods[0].open && !openingHours.periods[0].close) {\n                return lodash.range(0, 7).reduce(\n                    (times, day) => {\n                        times[day] = '24 hours';\n                        return times;\n                    }, {}\n                );\n            }\n\n            return openingHours.periods.reduce(\n                (times, period) => {\n                    let time = moment(period.close.time, 'HHmm');\n\n                    if (time.isValid()) {\n                        times[period.open.day] = time.format('h:mm A'); // use the day from the opening time to handle\n                    }                                                   // cases where closing time is the next day\n\n                    return times;\n                }, {}\n            );\n        };\n\n        service.locationSearch = (searchString, onlyEstablishments) => $q(\n            (resolve, reject) => {\n                searchString = '' + (searchString || ''); // cast to string\n\n                if (searchString.length < 3) {\n                    resolve([]);\n                }\n\n                let autocomplete = new $window.google.maps.places.AutocompleteService();\n                let request = { input: searchString };\n\n                if (onlyEstablishments) {\n                    request.types = [ 'establishment' ];\n                }\n\n                if (service.hasLocation) {\n                    request.radius = 40234; // in meters (40234 m ~= 25 mi) -- required when using `location`\n                    request.location = new $window.google.maps.LatLng(\n                        service.lastKnownLocation.coords.latitude, service.lastKnownLocation.coords.longitude\n                    );\n                }\n\n                autocomplete.getPlacePredictions(request, (results, status) => {\n                    if (status != google.maps.places.PlacesServiceStatus.OK) {\n                        console.error('Google Maps error: ' + status);\n                        console.error(results);\n\n                        return reject(results);\n                    }\n\n                    console.log(results);\n                    resolve(results);\n                });\n            }\n        );\n\n        service.hasLocation = false;\n\n        service.watchId = false;\n\n        service.getCoordinates = searchString => $q((resolve, reject) => {\n            const maps = $window.google.maps;\n            const geocoder = new maps.Geocoder;\n\n            geocoder.geocode({\n                address: searchString\n            }, (result, status) => {\n                console.log(result);\n\n                if (status === maps.GeocoderStatus.OK) {\n                    resolve({\n                        latitude: result[0].geometry.location.lat(),\n                        longitude: result[0].geometry.location.lng()\n                    });\n                } else {\n                    reject(result);\n                }\n            });\n        });\n\n        /**\n         * Retrieve place name from Google Places API based on lat/lng coords\n         */\n        service.getPlaceName = coords => $q((resolve, reject) => {\n            const maps = $window.google.maps;\n            const geocoder = new maps.Geocoder;\n\n            geocoder.geocode({\n                location: coords\n            }, (result, status) => {\n                if (status === google.maps.GeocoderStatus.OK) {\n                    // https://developers.google.com/maps/documentation/geocoding/intro#GeocodingResponses\n                    let city, state, country;\n                    let components = result[0].address_components; // assume the first result is most accurate\n\n                    for (let i = 0; i < components.length; i++) {\n                        let types = components[i].types;\n\n                        for (let j = 0; j < types.length; j++) {\n                            if (types[j] === 'country') {\n                                country = components[i].short_name;\n                            } else if (types[j] === 'administrative_area_level_1') { // state (US)\n                                state = components[i].short_name;\n                            } else if (types[j] === 'locality') { // city/town (US)\n                                city = components[i].long_name;\n                            }\n                        }\n                    }\n\n                    let pieces = [];\n\n                    if (city) {\n                        pieces.push(city);\n                    }\n\n                    if (state) {\n                        pieces.push(state);\n                    }\n\n                    if (country) {\n                        pieces.push(country);\n                    }\n\n                    resolve(pieces.join(', '));\n                } else {\n                    reject(result);\n                }\n            });\n        });\n\n        /**\n         * Retrieve locations from Google Places API and update service's\n         * location list\n         */\n        service.fetchLocations = position => {\n            const maps = $window.google.maps;\n\n            new maps.places.PlacesService(document.createElement('div')).nearbySearch({\n                location: new maps.LatLng(position.coords.latitude, position.coords.longitude),\n                rankBy: maps.places.RankBy.DISTANCE,\n                types: service.placeTypes,\n            }, (results, status) => {\n                if (status === maps.places.PlacesServiceStatus.OK) {\n                    // Remove any locality/political locations\n                    let locations = results.filter(location =>\n                        -1 === location.types.indexOf('locality')\n                         && -1 === location.types.indexOf('political')\n                    ).map(location => ({\n                        place_id: location.place_id,\n                        name: location.name,\n                        geometry: location.geometry,\n                        addr: location.vicinity,\n                        distance: service.getDistance(location.geometry.location.lat(), location.geometry.location.lng()),\n                        type: location.types[0],\n                        types: location.types.filter(\n                            type => type !== 'establishment' && type !== 'point_of_interest'\n                        )\n                    }));\n\n                    let IOIService = $injector.get('IOIService');\n\n                    IOIService.getIoisForIds(locations.map(location => location.place_id))\n                        .then(response => {\n                            let iois = response.data.reduce((iois, ioi) => {\n                                iois[ioi.ioiId] = ioi;\n                                return iois;\n                            }, {});\n\n                            locations.forEach(location => {\n                                if (iois.hasOwnProperty(location.place_id)) {\n                                    let ioi = iois[location.place_id];\n                                    let largest = Math.max(ioi.loveCount, ioi.okCount, ioi.hateCount);\n\n                                    location.ioiId = ioi.ioiId;\n\n                                    if (largest === ioi.loveCount) {\n                                        location.ratingType = 'love';\n                                    } else if (largest === ioi.okCount) {\n                                        location.ratingType = 'ok';\n                                    } else if (largest === ioi.hateCount) {\n                                        location.ratingType = 'hate';\n                                    }\n\n                                    location.ratingCount = ioi.loveCount + ioi.okCount + ioi.hateCount;\n                                } else {\n                                    location.ratingType = '';\n                                    location.ratingCount = 0;\n                                }\n\n                                location.formattedRatingCount = $filter('shortNumber')(location.ratingCount);\n                            });\n\n                            service.lastError = null;\n                            service.locations = locations;\n\n                            // Send new locations to native plugin\n                            if (angular.isDefined($window.NativeTap)) {\n                                NativeTap.setLocations(service.locations);\n                            }\n                        })\n                        .catch(err => {\n                            console.log(err);\n                            service.lastError = err;\n                        })\n                }\n                // Handle error on position change and clear locations\n                else {\n                    console.error(\"Error retrieving places from Google\");\n                    console.error(status);\n                    console.error(results);\n                    service.locations = [];\n                    service.lastError = results;\n                }\n            });\n        };\n\n        service.init = () => {\n            if (service.watchId) {\n                $cordovaGeolocation.clearWatch(service.watchId);\n                service.watchId = false;\n            }\n\n            service.watchId = $cordovaGeolocation.watchPosition({ enableHighAccuracy: false });\n\n            service.watchId.then(null, err => {\n                console.error(\"Error watching position change\");\n                console.error(JSON.stringify(err));\n\n                service.locations = [];\n                service.lastError = err;\n                service.lastKnownLocation = false;\n                service.lastWatchChange = 0;\n                service.hasLocation = false;\n            }, position => {\n                const now = new Date;\n                // Do not update location list if the position has changed\n                // after less than a minute\n                if (now - service.lastWatchChange > 60000) {\n                    service.lastKnownLocation = position;\n                    service.lastWatchChange = now;\n                    service.hasLocation = true;\n\n                    if (!localStorage.ANALYTICS_ENABLE_LOCATION_SENT) {\n                        localStorage.ANALYTICS_ENABLE_LOCATION_SENT = 'true';\n                        AnalyticsService.recordEvent('ENABLE_LOCATION', 'Enable Location');\n                    }\n\n                    return service.fetchLocations(position);\n                }\n            });\n\n            service.fetchPlaceTypes();\n        };\n\n        service.startUp = () => {\n            // Wait for google API to become available\n            const checkGoogleAvailability = $interval(() => {\n                if (angular.isDefined($window.google)) {\n                    $interval.cancel(checkGoogleAvailability);\n\n                    service.init();\n                }\n            }, 1000);\n        };\n\n        service.getPlaceDetails = placeId => $q(\n            (resolve, reject) => {\n                const maps = $window.google.maps;\n\n                new maps.places.PlacesService(document.createElement('div')).getDetails({ placeId },\n                    (place, status) => {\n                        if (status == google.maps.places.PlacesServiceStatus.OK) {\n                            resolve(place);\n                        } else {\n                            console.error('Google Maps error: ' + status);\n                            console.error(place);\n\n                            reject(place);\n                        }\n                    }\n                );\n            }\n        );\n\n        service.fetchPlaceTypes = () => $http.get(`https://s3.amazonaws.com/${FTAP_CONFIG.S3_RESOURCE_BUCKET}/place-types.json`)\n            .then(response => service.placeTypes = response.data);\n\n        /**\n         * Get the distance between a lat/long point and the user's last known location.  Returns distance in feet if\n         * distance < 0.1 mi or miles if >= 0.1 mi.  Returns null on error (most likely no last known location)\n         */\n        service.getDistance = (lat, lng) => {\n            try {\n                let distance = geolib.getDistance(service.lastKnownLocation.coords, { latitude: lat, longitude: lng });\n\n                return geolib.convertUnit('mi', distance) >= 0.1\n                    ? `${geolib.convertUnit('mi', distance, 1)} mi`\n                    : `${geolib.convertUnit('ft', distance, 0)} ft`;\n            } catch (e) {\n                console.error(e);\n                return null;\n            }\n        };\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('ObservationService', ObservationService);\n\n    ObservationService.$inject = [\n        '$q', '$window', '$cordovaDialogs', 'CameraService', 'ApiService', 'S3Service', 'UserService',\n        'LocationService', 'PushNotificationService'\n    ];\n\n    function ObservationService ($q, $window, $cordovaDialogs, CameraService, ApiService, S3Service, UserService,\n        LocationService, PushNotificationService) {\n        const service = {};\n\n        service.placeToView = null;\n\n        service.send = (imageUri, observation) => $q.when()\n            .then(() => {\n                if (observation.hasOwnProperty('place_id')) {\n                    observation.type = 'place';\n                }\n\n                if (UserService.username) {\n                    observation.username = UserService.username;\n                }\n\n                if (UserService.name) {\n                    observation.name = UserService.name;\n                }\n\n                if (UserService.thumbnailLink) {\n                    observation.photoLink = UserService.thumbnailLink;\n                } else if (UserService.photoLink) {\n                    observation.photoLink = UserService.photoLink;\n                }\n\n                return observation.place_id\n                    ? LocationService.getPlaceDetails(observation.place_id)\n                    : $q.when(false);\n            })\n            .then(place => {\n                if (place) {\n                    observation.geometry = place.geometry;\n                    observation.title = place.name;\n                    observation.category = place.types.join(',');\n\n                    if (place.formatted_address) {\n                        observation.address = place.formatted_address;\n                    }\n\n                    if (place.formatted_phone_number) {\n                        observation.phone = place.formatted_phone_number;\n                    }\n\n                    if (place.opening_hours) {\n                        observation.closingTimes = LocationService.getClosingTimes(place.opening_hours);\n                    }\n                }\n\n                if (observation.title.length > 40) {\n                    observation.title = observation.title.substring(0, 37) + \"...\";\n                }\n            })\n            .then(() => imageUri\n                ? CameraService.crop(imageUri, 1080, 1080, true)\n                    .then(blob => S3Service.uploadPhoto(blob))\n                    .then(result => result.Location)\n                : false\n            )\n            .then(imageUrl => {\n                let queryParams = { feedType: 'Obs' };\n\n                if (imageUrl) {\n                    observation.imageUrl = imageUrl;\n                }\n\n                return ApiService.request('observationPut', queryParams, observation, { queryParams });\n            })\n            .then(response => {\n                if (angular.isDefined('NativeTap')) {\n                    NativeTap.sendTapSuccess();\n                }\n\n                return response;\n            })\n            .catch(err => {\n                if (angular.isDefined('NativeTap')) {\n                    NativeTap.sendTapFailure();\n                }\n\n                return $q.reject(err);\n            })\n\n        service.observationFeed = () => {\n            let queryParams = { movementFeed: '' };\n\n            return ApiService.request('observationfeedGet', queryParams, {}, { queryParams })\n        };\n\n        service.upvotedObservationFeed = () => {\n            let queryParams = { movementFeed: '1' };\n\n            return ApiService.request('observationfeedGet', queryParams, {}, { queryParams })\n        };\n\n        service.friendFeed = (friends) => {\n            let cogIds = friends.map(el => el.cogId).join();\n            let queryParams = {\n                idList: cogIds,\n                onLocation: '',\n                mobsOnly: ''\n            };\n\n            return ApiService.request('feedGet', queryParams, {}, { queryParams });\n        };\n\n        service.observationDetails = observationId => {\n            return ApiService.request('observationGet', {\n                observationId\n            }, {}, { queryParams: { observationId } });\n        };\n\n        service.join = mob => {\n            let queryParams = { feedType: 'Agr' };\n            let cogId = AWS.config.credentials.identityId;\n\n            if (typeof mob === 'string') {\n                mob = {\n                    upvoteCount: 0,\n                    isMobMember: false,\n                    mobId: mob\n                };\n            }\n\n            mob.upvoteCount++;\n            mob.isMobMember = true;\n\n            return ApiService.request('observationPut', queryParams, { upvotedMobId: mob.mobId }, { queryParams })\n                .then(() => {\n                    if (!PushNotificationService.hasSeenNudge()) {\n                        PushNotificationService.promptToEnable();\n                    } else {\n                        PushNotificationService.checkIfEnabled()\n                            .then(() => { /* user has notifications enabled, no action required */ })\n                            .catch(err => {\n                                if (!localStorage.PUSH_NOTIFICATION_REMINDER_SEEN) {\n                                    $cordovaDialogs.alert(\n                                        \"If you would like to receive notifications regarding this Mob and others \"\n                                      + \"you've joined, please turn them on in your application settings.\", '', 'OK');\n                                    localStorage.PUSH_NOTIFICATION_REMINDER_SEEN = true;\n                                }\n                            });\n                    }\n                }).catch(err => {\n                    $cordovaDialogs.alert(\"We're sorry, an error occurred when you tried to join this Mob.\", '', 'OK');\n                    mob.upvoteCount--;\n                    mob.isMobMember = false;\n\n                    return $q.reject(err);\n                });\n        };\n\n        service.getTapsForLocation = placeId => {\n            let queryParams = {\n                idList: placeId,\n                onLocation: 1,\n                mobsOnly: ''\n            };\n\n            return ApiService.request('feedGet', queryParams, {}, { queryParams })\n                .then(response => response.data);\n        };\n\n        service.getMobsForLocation = placeId => {\n            let queryParams = {\n                idList: placeId,\n                onLocation: 1,\n                mobsOnly: 1\n            };\n\n            return ApiService.request('feedGet', queryParams, {}, { queryParams })\n                .then(response => response.data);\n        };\n\n        service.getRelatedTaps = combinedDescription => {\n            let queryParams = { combinedDescription };\n\n            return ApiService.request('feedByMobGet', queryParams, {}, { queryParams })\n                .then(response => response.data.Items);\n        };\n\n        service.getMobs = (type, coords) => {\n            let queryParams = {\n                type,\n                location: (coords ? [coords.latitude, coords.longitude] : []).join(',')\n            };\n\n            return ApiService.request('feedByTypeGet', queryParams, {}, { queryParams })\n                .then(response => {\n                    if (LocationService.hasLocation) {\n                        response.data.forEach(item => {\n                            if (item.geometry) {\n                                item.distance = LocationService.getDistance(\n                                    item.geometry.location.lat, item.geometry.location.lng\n                                );\n                            }\n                        });\n                    }\n\n                    return response.data;\n                });\n        }\n\n        service.searchMobs = (type, searchString) => {\n            let queryParams = { type, searchString };\n\n            return ApiService.request('feedSearchGet', queryParams, {}, { queryParams })\n                .then(response => {\n                    let results = response.data.Items;\n\n                    if (LocationService.hasLocation) {\n                        results.forEach(item => {\n                            if (item.geometry) {\n                                item.distance = LocationService.getDistance(\n                                    item.geometry.location.lat, item.geometry.location.lng\n                                );\n                            }\n                        });\n                    }\n\n                    return results;\n                });\n        };\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('PlatformService', PlatformService);\n\n    PlatformService.$inject = [];\n\n    function PlatformService () {\n        return ionic.Platform;\n    }\n})();\n","\n\n(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('ProfilePictureService', ProfilePictureService);\n\n    ProfilePictureService.$inject = ['CameraService', 'S3Service', 'UserService', 'ApiService'];\n\n    function ProfilePictureService (CameraService, S3Service, UserService, ApiService) {\n        const service = {};\n\n        service.takeProfilePicture = () => CameraService.getPicture()\n            .then(imageUri => CameraService.crop(imageUri, 400, 400, true));\n\n        service.uploadProfilePicture = blob => S3Service.uploadPhoto(blob, 'profile/profile')\n            .then(result => service.setProfilePicture(result.Location)); // result.Location is url\n\n        service.getFacebookProfilePictureUrl = () => {\n            return UserService.socialId\n                ? 'https://graph.facebook.com/' + UserService.socialId + '/picture?width=400&height=400'\n                : null;\n        }\n\n        service.useFacebookProfilePicture = () => service.setProfilePicture(service.getFacebookProfilePictureUrl());\n\n        service.setProfilePicture = url => ApiService.request('adduserphotoPost', {}, {\n            photoLink: url\n        }).then(response => {\n            UserService.photoLink = response.data.Attributes.photoLink;\n            UserService.thumbnailLink = UserService.photoLink\n                ? UserService.photoLink.replace('/profile/profile.png', '/profile-thumbnail/profile-resized.png' + '?' + Date.now())\n                : '';\n\n            return UserService.photoLink;\n        });\n\n        return service;\n    }\n})();\n","// Subscribe user to push notifications\n(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('PushNotificationService', PushNotificationService);\n\n    PushNotificationService.$inject = [\n        '$q', '$state', '$window', '$ionicPlatform', 'FTAP_CONFIG', 'ApiService', 'PlatformService',\n        'EnableNotificationModalService', 'UserService'\n    ];\n\n    function PushNotificationService($q, $state, $window, $ionicPlatform, FTAP_CONFIG, ApiService, PlatformService,\n        EnableNotificationModalService, UserService) {\n\n        const service = {\n            hasSeenNudge,\n            hasSubscribed,\n            promptToEnable,\n            register,\n            subscribe,\n            checkIfEnabled,\n        };\n\n        function hasSeenNudge () {\n            return $window.localStorage.getItem('PUSH_NOTIFICATION_NUDGE_SEEN') === 'true';\n        }\n\n        function hasSubscribed () {\n            return $window.localStorage.getItem('DEVICE_HAS_REGISTERED_FOR_PUSH') === 'true';\n        }\n\n        function promptToEnable () {\n            $window.localStorage.setItem('PUSH_NOTIFICATION_NUDGE_SEEN', 'true');\n\n            return EnableNotificationModalService.showModal().then(() => service.register());\n        }\n\n        function register () {\n            $ionicPlatform.ready(() => {\n                if ($window.PushNotification) {\n                    const push = $window.PushNotification.init({\n                        android: {\n                            senderID: FTAP_CONFIG.GCM_SENDER_ID,\n                            icon: 'ic_stat_droid_notification',\n                            iconColor: '#003D99',\n                        },\n                        ios: {\n                            alert: true\n                        },\n                    });\n\n                    if (!hasSubscribed()) {\n                        push.on('registration', data =>\n                            subscribe(data.registrationId, PlatformService.isIOS() ? 'ios' : 'android')\n                        );\n                    }\n\n                    push.on('notification', () => $state.go('main.profile.my-mobs'));\n\n                    push.on('error', err => console.error(err));\n                }\n            });\n        }\n\n        function subscribe (token, platform) {\n            ApiService.request('registerdevicePost', {}, {token, platform}, {}).then(() =>\n                $window.localStorage.setItem('DEVICE_HAS_REGISTERED_FOR_PUSH', 'true')\n            ).catch(err => console.error(err));\n        }\n\n        function checkIfEnabled () {\n            if (angular.isUndefined($window.PushNotification)) {\n                UserService.notifs = 0;\n                return $q.reject('Push notification plugin not present');\n            }\n\n            return $q(\n                (resolve, reject) => PushNotification.hasPermission(data => {\n                    if (data.isEnabled) {\n                        UserService.notifs = 1;\n                        resolve();\n                    } else {\n                        UserService.notifs = 0;\n                        reject('Push notifications not enabled');\n                    }\n                })\n            );\n        }\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('S3Service', S3Service);\n\n    S3Service.$inject = ['$q', 'FTAP_CONFIG', 'UserService'];\n\n    function S3Service ($q, FTAP_CONFIG, UserService) {\n        const service = {};\n\n        // Upload user-specific photos for Taps and profile pictures\n        service.uploadPhoto = (blob, name) => $q(\n            (resolve, reject) => {\n                name = name || Date.now();\n\n                const bucket = new AWS.S3({\n                    params: {\n                        Bucket: FTAP_CONFIG.S3_PHOTO_BUCKET\n                    }\n                });\n\n                bucket.upload({\n                    Key: AWS.config.credentials.identityId + '/' + name + '.png', // filename\n                    Body: blob,\n                    ContentType: 'image/png'\n                }, (err, data) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(data);\n                    }\n                });\n            }\n        );\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('SharingService', SharingService);\n\n    SharingService.$inject = ['$window'];\n\n    function SharingService ($window) {\n        const service = {\n            get facebook () {\n                return localStorage.getItem('FTAP_SHARE_FACEBOOK') === 'true';\n            },\n\n            set facebook (value) {\n                localStorage.setItem('FTAP_SHARE_FACEBOOK', !!value);\n\n                // Update NativeTap with default sharing selection\n                if ($window.NativeTap) {\n                    NativeTap.setProfileSettings({\n                        isFbSharingEnabledDefault: !!value,\n                    });\n                }\n            }\n        };\n\n        // set default value if localStorage key doesn't yet exist\n        if (localStorage.getItem('FTAP_SHARE_FACEBOOK') === null) {\n            localStorage.setItem('FTAP_SHARE_FACEBOOK', false);\n        }\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('TabsService', TabsService);\n\n    TabsService.$inject = [];\n\n    function TabsService () {\n        const service = {};\n\n        service.tabsActive = true;\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('TapParamsService', TapParamsService);\n\n    TapParamsService.$inject = [];\n\n    /**\n     * because of the way Ionic and ui-router handle sub-states (and all states are substates of 'main')\n     * state params are never cleared once set\n     * therefore, after the first time user goes to the tap screen from Location details\n     * all consecutive entries to the tap screen bring up the same location\n     * a way around it is to use a service to pass the rating and place id\n     * instead of state params.\n     */\n    function TapParamsService () {\n        const service = {};\n\n        service.rating = false;\n        service.place_id = false;\n        service.hasParams = () => service.rating && service.place_id;\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('UserService', UserService);\n\n    UserService.$inject = ['ApiService'];\n\n    function UserService (ApiService) {\n        const service = {\n            cogId: null,\n            socialId: null,\n            username: null,\n            name: null,\n            email: null,\n            location: null,\n            photoLink: null,\n            thumbnailLink: null,\n            gender: null,\n            birthYear: null,\n            loveCount: 0,\n            hateCount: 0,\n            okCount: 0,\n            notifs: 0,\n            timestamp: null,\n            // List of IDs for friends/followers\n            friends: [],\n        };\n\n        service.registerUser = (socialId, email, photoLink, username) => {\n            const userInfo = {};\n\n            if (socialId) {\n                userInfo.socialId = socialId;\n            }\n\n            if (email) {\n                userInfo.email = email;\n            }\n\n            if (photoLink) {\n                userInfo.photoLink = photoLink;\n            }\n\n            if (username) {\n                userInfo.username = username;\n            }\n\n            if (!username && !socialId) {\n                userInfo.status = 'anonymous';\n            } else {\n                userInfo.status = 'facebook';\n            }\n\n            return ApiService.request('registeruserPost', {}, userInfo)\n                .then(response => {\n                    // Set user default data post-login\n                    // cognito ID is used as user identifier and friends\n                    // list is used to generate feeds\n                    service.cogId = AWS.config.credentials.identityId;\n                    service.friends = response.data.friends || [];\n                    service.photoLink = response.data.photoLink;\n                    service.thumbnailLink = service.photoLink\n                        ? service.photoLink.replace('/profile/profile.png', '/profile-thumbnail/profile-resized.png')\n                        : '';\n                    service.timestamp = response.data.timestamp.split(\"T\")[0];\n\n                    // Update counts on load and after tap, for analytics\n                    service.loveCount = response.data.loveCount;\n                    service.hateCount = response.data.hateCount;\n                    service.okCount = response.data.okCount;\n\n                    return response;\n                });\n        }\n\n        service.updateSocialId = (photoLink) => {\n            ApiService.request('linkaccountsPost', {}, {\n                email: service.email,\n                location: service.location,\n                name: service.name,\n                photoLink: photoLink,\n                socialid: service.socialId,\n                status: 'facebook'\n            });\n        }\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .component('ftJoinMob', {\n            templateUrl: 'app/directives/join-mob/join-mob.html',\n            bindings: {\n                mob: '<'\n            },\n            controller: ['$cordovaDialogs', 'ObservationService', 'UserService', 'PushNotificationService',\n            function ($cordovaDialogs, ObservationService, UserService, PushNotificationService) {\n                let cogId = AWS.config.credentials.identityId;\n                /**\n                 * Join the associated mob if the user is not already a member.\n                 * This is done in asynchronously to the user; errors attempt\n                 * to roll back incorrectly reflected changes\n                 */\n                this.joinMob = mob => {\n                    if (mob.isMobMember) {\n                        return;\n                    }\n\n                    ObservationService.join(mob);\n                };\n            }],\n        });\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .component('ftMobList', {\n            templateUrl: 'app/directives/mob-list/mob-list.html',\n            bindings: {\n                mobs: '<'\n            },\n            controller: ['ObservationModalService',\n                function (ObservationModalService) {\n                    this.openMovement = mob => {\n                        ObservationModalService.showModal(mob)\n                            .catch(err => console.error(err));\n                    }\n                }\n            ],\n        });\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .directive('ftNavSelector', ftNavSelector);\n\n    function ftNavSelector () {\n        return {\n            restrict: 'E',\n            templateUrl: 'app/directives/nav-selector/nav-selector.html',\n            scope: true,\n            controller: ['$filter', function ($filter) {\n                this.states = [];\n\n                this.selectedClass = () => this.states.map(\n                    (state, index) => $filter('isState')(state.name)\n                        ? 'ft-nav-selected-' + (index + 1) + ' ft-nav-' + this.states.length + '-items'\n                        : ''\n                ).join(' ');\n            }],\n            controllerAs: 'navCtrl',\n            link: (scope, element, attrs) => attrs.$observe('states', value => scope.navCtrl.states = scope.$eval(value))\n        };\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .component('ftToggle', {\n            templateUrl: 'app/directives/toggle/toggle.html',\n            bindings: {\n                type: '@?',\n                value: '='\n            }\n        });\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('EnableNotificationModalService', EnableNotificationModalService);\n\n    EnableNotificationModalService.$inject = ['$q', '$rootScope', '$ionicModal', 'AnalyticsService'];\n\n    function EnableNotificationModalService ($q, $rootScope, $ionicModal, AnalyticsService) {\n        const service = {};\n\n        service.showModal = () => $q(\n            (resolve, reject) => {\n                let scope = $rootScope.$new();\n\n                scope.close = () => scope && scope.modal\n                    ? scope.modal.hide().then(() => scope.modal.remove())\n                    : $q.when();\n\n                scope.confirm = () => scope.close().then(resolve);\n\n                scope.cancel = () => scope.close().then(reject);\n\n                scope.$on('$destroy', () => {\n                    scope && scope.modal && scope.modal.remove();\n                });\n\n                $ionicModal.fromTemplateUrl('app/modals/enable-notification/enable-notification.html', {\n                    scope,\n                    backdropClickToClose: false\n                }).then(modal => {\n                    scope.modal = modal;\n                    scope.modal.show();\n\n                    AnalyticsService.screenView('Enable Notification');\n                });\n            }\n        );\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('ObservationModalController', ObservationModalController);\n\n    ObservationModalController.$inject = [\n        '$cordovaDialogs', 'ObservationService', 'ObservationModalService', 'AnalyticsService'\n    ];\n\n    function ObservationModalController ($cordovaDialogs, ObservationService, ObservationModalService, AnalyticsService) {\n        const self = this;\n\n        const screenName = 'Post';\n\n        self.closeModal = closeModal;\n        self.item = ObservationModalService.item;\n\n        activate();\n\n        function activate () {\n            AnalyticsService.screenView(screenName);\n            AnalyticsService.recordEvent('VIEWPOST', screenName, {\n                ctx_locName: self.item.title,\n                ctx_locAddress: self.item.address,\n                ctx_sentiment: self.item.rating,\n                ctx_postDate: self.item.timestamp\n            }, {\n                ctx_numJoins: self.item.upvoteCount\n            });\n        }\n\n        function closeModal () {\n            AnalyticsService.recordEvent('CLOSEPOST', screenName, {\n                ctx_locName: self.item.title,\n                ctx_locAddress: self.item.address,\n                ctx_sentiment: self.item.rating,\n                ctx_postDate: self.item.timestamp\n            }, {\n                ctx_numJoins: self.item.upvoteCount\n            });\n\n            ObservationModalService.modal.hide()\n                .then(() => ObservationModalService.modal.remove())\n                .then(() => {\n                    self.item = null;\n                    ObservationModalService.item = null;\n                });\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('ObservationModalService', ObservationModalService);\n\n    ObservationModalService.$inject = ['$ionicModal'];\n\n    function ObservationModalService ($ionicModal) {\n        const service = {};\n\n        service.item = null;\n        service.modal = null;\n\n        /**\n         * Initialize the observation to display and show the modal\n         */\n        service.showModal = item => {\n            service.item = item;\n\n            return $ionicModal.fromTemplateUrl('app/modals/observation-modal/observation-modal.html', {\n                backdropClickToClose: false\n            }).then(modal => {\n                service.modal = modal;\n                return service.modal.show();\n            });\n        };\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('TapDetailsModalController', TapDetailsModalController);\n\n    TapDetailsModalController.$inject = [\n        '$q', '$window', '$state', '$timeout', '$ionicLoading', 'LocationService', 'TapDetailsModalService',\n        'ObservationService', 'TapParamsService', 'AnalyticsService'\n    ];\n\n    function TapDetailsModalController($q, $window, $state, $timeout, $ionicLoading, LocationService,\n        TapDetailsModalService, ObservationService, TapParamsService, AnalyticsService) {\n        const self = this;\n\n        self.hasPlace = false;\n        self.place = null;\n        self.loaded = false;\n        self.mobs = [];\n\n        self.tapScreen = tapScreen;\n        self.closeModal = closeModal;\n        self.viewMobs = viewMobs;\n\n        activate();\n\n        function activate() {\n            AnalyticsService.screenView('Tap Details');\n\n            var getDetailsPromise;\n\n            // Only places should go through the google maps api...\n            if (TapDetailsModalService.category === \"places\") {\n                getDetailsPromise = LocationService.getPlaceDetails(\n                    !!TapDetailsModalService.mob\n                        ? TapDetailsModalService.mob.place_id\n                        : TapDetailsModalService.placeId\n                );\n            }\n\n            // Things and People should just return the necessary data for the modal\n            else {\n                getDetailsPromise = $q((resolve, reject) => {\n                    resolve(TapDetailsModalService.mob);\n                });\n            }\n\n            let getListPromise = (\n                !!TapDetailsModalService.mob\n                    ? ObservationService.getRelatedTaps(TapDetailsModalService.mob.combinedDescription)\n                    : ObservationService.getTapsForLocation(TapDetailsModalService.placeId)\n            );\n\n            $ionicLoading.show()\n                .then(() => $q.all([\n                    // retrieve place name + address\n                    getDetailsPromise.then(place => self.place = place),\n\n                    // retrieve taps/mobs for place\n                    getListPromise.then(data => self.mobs = data)\n                ]))\n                .catch(error => console.error(error))\n                .finally(() => {\n                    self.loaded = true;\n                    $ionicLoading.hide();\n                });\n        }\n\n        function closeModal(clear) {\n            /**\n             * .hide() hides it from view via an animation, but keeps it in the DOM\n             * because of which, the more modals you open (or the more times you open the same modal) the DOM keeps getting filled\n             * .remove() removes the element(s) from DOM\n             *\n             * however, calling only .remove() makes the modal disappear, no animation\n             * that's why it is chained with .hide().then()\n             */\n\n            return TapDetailsModalService.modal.hide()\n                .then(() => TapDetailsModalService.modal.remove());\n        }\n\n        function tapScreen(rating) {\n            if (angular.isDefined($window.NativeTap)) {\n                TapDetailsModalService.modal.remove();\n                NativeTap.openLocationTap(self.place, rating, null);\n                AnalyticsService.recordEvent(\"TAP\", \"4.1.1 - Tap Details\", {\n                    \"ctx_sentiment\": rating,\n                    \"ctx_locName\": self.place ? self.place.name : \"N/A\",\n                    \"ctx_locAddress\": self.place ? self.place.formatted_address : \"N/A\"\n                }, {});\n            }\n        }\n\n        function viewMobs(item) {\n            if (item.upvoteCount) {\n                ObservationService.placeToView = {\n                    title: item.title,\n                    placeId: item.place_id\n                };\n\n                $state.go('main.mobs').then(\n                    () => TapDetailsModalService.modal.remove() // remove modal right away with no animation\n                );\n            }\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .factory('TapDetailsModalService', TapDetailsModalService);\n\n    TapDetailsModalService.$inject = ['$ionicModal'];\n\n    function TapDetailsModalService ($ionicModal) {\n        const service = {};\n\n        service.placeId = null;\n        service.mob = null;\n        service.modal = null;\n        service.category = null;\n\n        service.showTapDetails = (placeId, rating) => {\n            service.placeId = placeId;\n            service.category = \"places\";\n            service.mob = null;\n\n            return showModal();\n        };\n\n        service.showMobDetails = (mob, category) => {\n            if (!mob.place_id) {\n                mob.place_id = null;\n            }\n\n            service.category = category;\n            service.mob = mob;\n\n            return showModal();\n        };\n\n        return service;\n\n        function showModal () {\n            return $ionicModal.fromTemplateUrl('app/modals/tap-details-modal/tap-details-modal.html', {\n                backdropClickToClose: false,\n                animation: 'slide-in-left'\n            }).then(modal => {\n                service.modal = modal;\n\n                return service.modal.show();\n            });\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('AuthController', AuthController);\n\n    AuthController.$inject = ['$stateParams', '$rootScope', '$window', '$state', '$ionicPlatform', 'AuthService', 'isLoggedInFacebook', 'isAnonymous'];\n\n    function AuthController ($stateParams, $rootScope, $window, $state, $ionicPlatform, AuthService, isLoggedInFacebook, isAnonymous) {\n        this.useFacebook = true;\n\n        this.toggleFacebook = toggleFacebook;\n\n        activate();\n\n        function activate() {\n            if ($stateParams.reload) {\n                return $window.location.reload(true)\n            }\n\n            $ionicPlatform.ready(() => {\n                if (angular.isDefined($window.navigator) && angular.isDefined($window.navigator.splashscreen)) {\n                    $window.navigator.splashscreen.hide();\n                }\n            });\n\n            $state.go(localStorage.ONBOARDING_COMPLETE ? 'main.tap' : 'onboarding');\n        }\n\n        function toggleFacebook () {\n            this.useFacebook = !this.useFacebook;\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('MainController', MainController);\n\n    MainController.$inject = [\n        '$state', '$scope', '$window', '$timeout', '$ionicPlatform', '$ionicLoading', 'moment', 'LocationService',\n        'CameraService', 'FacebookService', 'TabsService', 'ImageUriService', 'IOIService', 'ObservationService',\n        'CannedResponseService', 'AnalyticsService', 'SharingService', 'isLoggedInFacebook', 'isAnonymous', 'UserService'\n    ];\n\n    function MainController ($state, $scope, $window, $timeout, $ionicPlatform, $ionicLoading, moment, LocationService,\n        CameraService, FacebookService, TabsService, ImageUriService, IOIService, ObservationService, CannedResponseService,\n        AnalyticsService, SharingService, isLoggedInFacebook, isAnonymous, UserService) {\n        var self = this;\n\n        self.TabsService = TabsService;\n\n        activate();\n\n        function activate () {\n            updateFriends();\n\n            $ionicPlatform.on('resume', event => {\n                updateFriends();\n            });\n        }\n\n        function updateFriends () {\n            FacebookService\n                .checkLoginStatus()\n                .then(() => FacebookService.getFriends())\n                .then(friends => FacebookService.updateFriends(friends))\n                .catch(err => console.error(err));\n        }\n\n        function sendObservation (observation) {\n            $ionicLoading.show()\n                .then(() => ObservationService.send(ImageUriService.currentImageUri, observation))\n                .then(() => {\n                    TabsService.tabsActive = true;\n                    ImageUriService.currentImageUri = null;\n\n                    return $state.go('main.feed', { tapCreated: true });\n                })\n                .catch(err => {\n                    console.error(err);\n                })\n                .then(() => {\n                    if (LocationService.hasLocation) {\n                        LocationService.fetchLocations(LocationService.lastKnownLocation);\n                    }\n                })\n                .finally(() => $ionicLoading.hide());\n        }\n\n        // native handlers are defined here to ensure that the plugin is loaded before they're called\n        if (angular.isDefined($window.NativeTap)) {\n            NativeTap.tabHandlers(\n                () => $scope.$apply(() => TabsService.tabsActive = true),\n                () => $scope.$apply(() => TabsService.tabsActive = false)\n            );\n\n            // Update NativeTap with information about whether the user is logged\n            // into Facebook and if they have selected to share to Facebook\n            // by default\n            NativeTap.setProfileSettings({\n                isLoggedInFacebook,\n                isFbSharingEnabledDefault: SharingService.facebook,\n            });\n\n            NativeTap.requestLocationsHandler(() => {\n                if (LocationService.lastError) {\n                    return NativeTap.errorLocations(LocationService.lastError);\n                }\n\n                NativeTap.setLocations(LocationService.locations);\n\n                if (!localStorage.COACH_MARKS_SEEN) {\n                    localStorage.COACH_MARKS_SEEN = true;\n                }\n            });\n\n            NativeTap.getPictureHandler(\n                () => CameraService.getPicture()\n                    .then(nativeUri => {\n                        ImageUriService.currentImageUri = nativeUri;\n                        NativeTap.setPicture(nativeUri);\n                    })\n                    .catch(err => console.error(err))\n            );\n\n            let getThingsTimeout = null;\n\n            NativeTap.getThingsHandler(\n                searchString => {\n                    if (getThingsTimeout) {\n                        $timeout.cancel(getThingsTimeout);\n                    }\n\n                    getThingsTimeout = $timeout(() => {\n                        getThingsTimeout = null;\n\n                        IOIService.getThings(searchString)\n                            .then(data => {\n                                NativeTap.setThings(data)\n                                let resultsObj = {};\n                                data.Items.forEach((el, idx) => {\n                                    resultsObj[\"ctx_name_\" + (idx + 1)] = el[\"ftap-thing\"];\n                                });\n                                AnalyticsService.recordEvent(\"SEARCH_TERMS\", \"3.2 - Search\", angular.extend({\n                                    \"ctx_search\": \"person\",\n                                    \"ctx_searchTerms\": searchString\n                                }, resultsObj), {});\n                            })\n                            .catch(err => {\n                                console.error(err);\n                                NativeTap.getThingsError(err);\n                            });\n                    }, 400);\n                }\n            );\n\n            let getPeopleTimeout = null;\n\n            NativeTap.getPeopleHandler(\n                searchString => {\n                    if (getPeopleTimeout) {\n                        $timeout.cancel(getPeopleTimeout);\n                    }\n\n                    getPeopleTimeout = $timeout(() => {\n                        getPeopleTimeout = null;\n\n                        IOIService.getPeople(searchString)\n                            .then(data => {\n                                NativeTap.setPeople(data)\n                                let resultsObj = {};\n                                data.Items.forEach((el, idx) => {\n                                    resultsObj[\"ctx_name_\" + (idx + 1)] = el[\"ftap-person\"];\n                                });\n                                AnalyticsService.recordEvent(\"SEARCH_TERMS\", \"3.2 - Search\", angular.extend({\n                                    \"ctx_search\": \"person\",\n                                    \"ctx_searchTerms\": searchString\n                                }, resultsObj), {});\n                            })\n                            .catch(err => {\n                                console.error(err);\n                                NativeTap.getPeopleError(err);\n                            });\n                    }, 400);\n                }\n            );\n\n            NativeTap.addItemHandler(\n                item => IOIService.addItem(item)\n                    .then(data => {\n                        NativeTap.addItemSuccess(data);\n                    })\n                    .catch(err => {\n                        NativeTap.addItemFailure(err);\n                    })\n            );\n\n            let locationSearchTimeout = null;\n\n            NativeTap.locationSearchHandler(\n                searchString => {\n                    searchString = (searchString || '') + ''; // cast to string\n\n                    if (locationSearchTimeout) {\n                        $timeout.cancel(locationSearchTimeout);\n                    }\n\n                    if (searchString.length < 3) {\n                        NativeTap.locationSearchSuccess([]);\n                    } else {\n                        locationSearchTimeout = $timeout(() => {\n                            locationSearchTimeout = null;\n\n                            LocationService.locationSearch(searchString, true)\n                                .then(results => {\n                                    NativeTap.locationSearchSuccess(results);\n                                    let resultsObj = {};\n                                    results.forEach((el, idx) => {\n                                        resultsObj[\"ctx_name_\" + (idx + 1)] = el.description;\n                                    });\n\n                                    AnalyticsService.recordEvent(\"SEARCH_TERMS\", \"3.2 - Search\", angular.extend({\n                                        \"ctx_search\": \"location\",\n                                        \"ctx_searchTerms\": searchString\n                                    }, resultsObj), {});\n                                })\n                                .catch(err => {\n                                    console.error(err);\n                                    NativeTap.locationSearchFailure(err);\n                                });\n                        }, 400);\n                    }\n                }\n            );\n\n            NativeTap.getLocationRatingResponsesHandler(data => {\n                /**\n                 *  data = {\n                 *      rating: 'love' || 'ok' || 'hate',\n                 *      placeType: 'airport' || 'amusement_park' || 'jewelry_store' || ... (from ftap-observation-list.json)\n                 *  };\n                */\n\n                return CannedResponseService\n                    .getResponses(data.ioiId, data.rating)\n                    .then(responses => {\n                        NativeTap.setLocationRatingResponses(responses);\n\n                        // Aggregate top comments and number of reviews after we receive tap data\n                        self.comments = responses.map(el => el.phrase);\n                        self.numReviews = responses.reduce((sum, el) => sum += el.count, 0);\n                    })\n                    .catch(err => console.error(err))\n            });\n\n            NativeTap.sendTapHandler(\n                data => {\n                    /**\n                     *  data = {\n                     *      selectedState: 'love' || 'ok' || 'hate',\n                     *      item: 'title of tapped non-location item',\n                     *      location: { location object },\n                     *      description: 'description of why item was tapped',\n                     *      type: type: 'person' || 'place' || 'thing',\n                     *      isFbEnabled: boolean\n                     *  };\n                     *\n                     * N.B. `item` and `location` are mutually exclusive\n                     */\n\n                    let commentsObj = {};\n                    self.comments.forEach((el, idx) => {\n                        commentsObj['ctx_comment_' + (idx + 1)] = el;\n                    });\n\n                    UserService[data.selectedState + 'Count'] ++;\n\n                    AnalyticsService.recordEvent(\"TAP_SUBMIT\", \"3.4 - Why Did You Tap\",\n                        angular.extend({\n                            \"ctx_locName\": data.location ? data.location.name : \"N/A\",\n                            \"ctx_locAddress\": data.location ? data.location.addr : \"N/A\",\n                            \"ctx_sentiment\": data.selectedState,\n                            \"ctx_whyTap\": data.description,\n                            \"ctx_shareChannel\": \"facebook\"\n                        }, commentsObj), {\n                            \"ctx_numReviews\": self.numReviews,\n                            \"ctx_attachedPic\": ImageUriService.currentImageUri ? 1 : 0\n                        });\n\n                    let observation = {\n                        rating: data.selectedState,\n                        description: data.description,\n                        type: data.type,\n                        ioiId: data.ioiId\n                    };\n\n                    if (data.hasOwnProperty('location')) { // location-based tap\n                        observation.place_id = data.location.place_id;\n                    } else if (data.hasOwnProperty('item')) { // non-location tap\n                        observation.title = data.item;\n                    } else { // some sort of invalid tap\n                        throw 'Invalid tap data';\n                    }\n\n                    sendObservation(observation);\n                },\n                err => console.error(err)\n            );\n\n            NativeTap.recordTapDurationHandler(\n                duration => AnalyticsService.recordTap(duration)\n            );\n\n            NativeTap.joinMobHandler(\n                mobId => ObservationService.join(mobId)\n                    .then(() => NativeTap.joinMobSuccess())\n                    .catch(err => NativeTap.addItemFailure(err))\n            );\n\n            NativeTap.analyticsEventHandler(\n                event => AnalyticsService.recordEvent(event.eventType, event.screenName, event.attributes, event.metrics)\n            );\n\n             NativeTap.tapMoodHandler(\n                mood => {\n                    AnalyticsService.recordEvent(\"TAP\", \"3.0 - Tap\", {\n                        \"ctx_sentiment\": mood,\n                        \"ctx_locName\": \"N/A\",\n                        \"ctx_locAddress\": \"N/A\"\n                    }, {});\n                }\n            );\n\n            NativeTap.addItemButtonTappedHandler(\n                search => {\n                    AnalyticsService.recordEvent(\"ADD\", \"3.3.1 - Search\", {\n                        \"ctx_item\": search\n                    }, {});\n                }\n            );\n\n            NativeTap.tapSearchHandler(\n                category => {\n                    AnalyticsService.recordEvent(\"SEARCH\", \"3.3 - Search\", {\n                    \"ctx_search\": category\n                }, {});\n                }\n            );\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('OnboardingController', OnboardingController);\n\n    OnboardingController.$inject = [\n        '$scope', '$window', '$ionicPlatform', '$state', 'LocationService', 'AnalyticsService'\n    ];\n\n    function OnboardingController ($scope, $window, $ionicPlatform, $state, LocationService, AnalyticsService) {\n        const self = this;\n\n        self.showLocationScreen = false;\n        self.sliderDelegate = null;\n        self.options = {\n            prevButton: '.ft-onboarding-button-prev',\n            nextButton: '.ft-onboarding-button-next'\n        };\n\n        self.next = next;\n        self.activateLocationServices = activateLocationServices;\n        self.close = close;\n\n        $scope.$on('$ionicSlides.slideChangeEnd', () => {\n            $scope.$digest(); // ensure that `self.sliderDelegate` properties update\n        });\n\n        activate();\n\n        function activate () {\n            AnalyticsService.screenView('Onboarding Slides');\n        }\n\n        function next () {\n            AnalyticsService.screenView('Enable Location');\n\n            self.showLocationScreen = true;\n        }\n\n        function activateLocationServices () {\n            LocationService.startUp();\n            $ionicPlatform.on('resume', LocationService.startUp);\n            self.close();\n        }\n\n        function close () {\n            localStorage.ONBOARDING_COMPLETE = true;\n            $state.go('main.tap');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$state', '$ionicLoading', '$cordovaDialogs', 'AuthService'];\n\n    function LoginController ($state, $ionicLoading, $cordovaDialogs, AuthService) {\n        this.emailLogin = emailLogin;\n        this.facebookLogin = facebookLogin;\n\n        function emailLogin (input) {\n            input = input || {};\n\n            $ionicLoading.show().then(\n                () => {\n                    AuthService\n                    .emailLogin(input.username, input.password)\n                    .then(() => {\n                        $ionicLoading.hide();\n                        $state.go(localStorage.ONBOARDING_COMPLETE ? 'main.tap' : 'onboarding');\n                    })\n                    .catch(result => {\n                        $ionicLoading.hide();\n                        console.error(JSON.stringify(result));\n                        $cordovaDialogs.alert('Please check your login information and try again.', 'Login Error', 'OK');\n                    });\n                }\n            );\n        }\n\n        function facebookLogin () {\n            $ionicLoading.show()\n                .then(() => AuthService.facebookAuth())\n                .then(() => $state.go(localStorage.ONBOARDING_COMPLETE ? 'main.tap' : 'onboarding'))\n                .catch(err => {\n                    // TODO real error message\n                    alert(JSON.stringify(err));\n                })\n                .finally(() => $ionicLoading.hide());\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('SignupController', SignupController);\n\n    SignupController.$inject = ['$state', '$ionicLoading', 'AuthService'];\n\n    function SignupController ($state, $ionicLoading, AuthService) {\n        this.emailSignup = emailSignup;\n        this.facebookSignup = facebookSignup;\n        this.validateLength = validateLength;\n        this.validateNumber = validateNumber;\n        this.validateCapital = validateCapital;\n        this.validateLower = validateLower;\n        this.validateSpecial = validateSpecial;\n        this.validateMatch = validateMatch;\n        this.validateExists = validateExists;\n        this.validateAlphanum = validateAlphanum;\n\n        function emailSignup (input, form) {\n            input = input || {};\n\n            // TODO validation\n\n            $ionicLoading.show().then(() => {\n                AuthService\n                // TODO remove `name` requirement from user pool\n                .emailSignup('Manual Signup User', input.email, input.username, input.password)\n                .then(() => {\n                    $ionicLoading.hide();\n                    $state.go('auth.signup-success', { hasFacebook: false });\n                })\n                .catch(err => {\n                    console.error(err);\n                    $ionicLoading.hide();\n\n                    if (err.message.indexOf('Invalid email address format') > -1) { // Amazon's email address requirements are stricter than angular's\n                        form.email.$setValidity('email', false);\n                    } else if (err.message.indexOf('User already exists') > -1) {\n                        form.username.$setValidity('exists', false);\n                    }\n                });\n            });\n        }\n\n        function facebookSignup () {\n            $ionicLoading.show()\n                .then(() => AuthService.facebookAuth())\n                .then(() => $state.go('auth.signup-success', { hasFacebook: true }))\n                .catch(err => {\n                    console.log(JSON.stringify(err));\n                    alert(JSON.stringify(err));\n                })\n                .finally(() => $ionicLoading.hide());\n        }\n\n        function validateLength (value) {\n            value = (value || '') + '';\n            return value.length >= 8 && value.length <= 25;\n        }\n\n        function validateNumber (value) {\n            return /\\d/.test(value || '');\n        }\n\n        function validateCapital (value) {\n            return /[A-Z]/.test(value || '');\n        }\n\n        function validateLower (value) {\n            return /[a-z]/.test(value || '');\n        }\n\n        function validateSpecial (value) {\n            return /[!\"#\\$%&'\\(\\)\\*\\+,-\\./:;<=>\\?@\\[\\]\\^_`\\{\\|\\}~]/.test(value || '');\n        }\n\n        function validateMatch (value1, value2) {\n            value1 = (value1 || '') + '';\n            value2 = (value2 || '') + '';\n            return value1 && value2 && (value1 === value2);\n        }\n\n        function validateExists () {\n            return true; // this just clears out any validation errors on change\n        }\n\n        function validateAlphanum (value) {\n            value = (value || '') + '';\n            return (value === '') || /^[a-z0-9]+$/i.test(value);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('SignupSuccessController', SignupSuccessController);\n\n    SignupSuccessController.$inject = ['$ionicLoading', '$stateParams', '$cordovaDialogs', '$state', 'AuthService'];\n\n    function SignupSuccessController ($ionicLoading, $stateParams, $cordovaDialogs, $state, AuthService) {\n        const self = this;\n\n        self.getLink = getLink;\n\n        activate();\n\n        function activate () {\n            if (!$stateParams.hasFacebook) {\n                $cordovaDialogs.confirm(\"When you connect your Facebook account you'll be able to connect with \" +\n                    \"your Facebook friends that are using the Tap app.\", 'Connect with Facebook', ['No, Thanks','OK'])\n                .then(buttonIndex => {\n                    if (buttonIndex == 1) {\n                        // No, Thanks\n                        $cordovaDialogs.alert('If you change your mind you can connect your' +\n                            ' Tap profile with Facebook in your Profile Settings. ', 'Connect with Facebook', 'OK');\n                    } else if (buttonIndex == 2) {\n                        // OK\n                        $ionicLoading.show()\n                            .then(() => AuthService.facebookLink())\n                            .then(result => {\n                                $cordovaDialogs.alert('Successfully linked your Tap profile with Facebook!',\n                                    'Connect with Facebook', 'OK'\n                                );\n\n                                console.log(result);\n                            })\n                            .catch(err => {\n                                $cordovaDialogs.alert('There was an error connecting your Tap profile with '\n                                    + 'Facebook.  You can try again later in your Profile Settings.',\n                                    'Connect with Facebook', 'OK'\n                                );\n\n                                console.log(err);\n                            })\n                            .finally(() => $ionicLoading.hide());\n                    }\n                });\n            }\n        }\n\n        function getLink () {\n            return $state.href(localStorage.ONBOARDING_COMPLETE ? 'main.tap' : 'onboarding');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('FeedController', FeedController);\n\n    FeedController.$inject = [\n        '$stateParams', '$scope', '$ionicLoading', 'ObservationService', 'ObservationModalService', 'UserService',\n        'PushNotificationService', 'AnalyticsService'\n    ];\n\n    function FeedController ($stateParams, $scope, $ionicLoading, ObservationService, ObservationModalService,\n        UserService, PushNotificationService, AnalyticsService) {\n        let self = this;\n\n        self.feedItems = [];\n        self.loading = true;\n        self.currentFeed = 'mine';\n        self.fetchFeedsMine = fetchFeedsMine;\n        self.fetchFeedsFriends = fetchFeedsFriends;\n        self.showItem = showItem;\n\n        activate();\n\n        function activate() {\n            self.fetchFeedsMine();\n\n            if ($stateParams.tapCreated && !PushNotificationService.hasSeenNudge()) {\n                PushNotificationService.promptToEnable();\n            }\n        }\n\n        function fetchFeedsMine () {\n            AnalyticsService.screenView('My Feed');\n            AnalyticsService.recordEvent(\"FEED\", \"9 - Feed\", {}, {\n                \"ctx_Mine\": 1,\n                \"ctx_Friends\": 0\n            });\n\n            self.feedItems = [];\n            self.loading = true;\n            self.currentFeed = 'mine';\n\n            $ionicLoading.show()\n                .then(() => ObservationService.observationFeed())\n                .then(data => self.feedItems = data.data['Items'])\n                .catch(err => console.error(JSON.stringify(err)))\n                .finally(() => {\n                    self.loading = false;\n                    $ionicLoading.hide();\n                });\n        }\n\n        function fetchFeedsFriends () {\n            AnalyticsService.screenView('Friends Feed');\n            AnalyticsService.recordEvent(\"FEED\", \"9 - Feed\", {}, {\n                \"ctx_Mine\": 0,\n                \"ctx_Friends\": 1\n            });\n\n            self.feedItems = [];\n            self.loading = true;\n            self.currentFeed = 'friends';\n\n            $ionicLoading.show()\n                .then(() => ObservationService.friendFeed(UserService.friends))\n                .then(feed => self.feedItems = feed.data)\n                .catch(err => console.error(JSON.stringify(err)))\n                .finally(() => {\n                    self.loading = false;\n                    $ionicLoading.hide();\n                });\n        }\n\n        function showItem (item) {\n            $ionicLoading.show()\n                .then(() => ObservationService.observationDetails(item.observationId))\n                .then(data => {\n                    ObservationModalService.showModal(data.data['Items'][0]);\n                })\n                .catch(err => console.error(err))\n                .finally(() => $ionicLoading.hide());\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('MobsController', MobsController);\n\n    MobsController.$inject = [\n        '$state', '$timeout', '$ionicLoading', '$ionicScrollDelegate', 'lodash', 'ObservationService',\n        'LocationService', 'ObservationModalService', 'TapDetailsModalService', 'AnalyticsService'\n    ];\n\n    function MobsController ($state, $timeout, $ionicLoading, $ionicScrollDelegate, lodash, ObservationService,\n        LocationService, ObservationModalService, TapDetailsModalService, AnalyticsService) {\n        var self = this;\n        var resultsObj = {people: {}, places: {}, things: {}};\n\n        const items = { people: null, places: null, things: null };\n        const searchStringCache = { people: '', places: '', things: '' };\n\n        let isJoiningMob = false;\n\n        self.categories = [ 'people', 'places', 'things' ];\n        self.selectedCategory = null;\n        self.displayItems = null;\n        self.searchString = null;\n        self.lastSearchedString = null;\n        self.loaded = false;\n\n        self.getSelectedCategoryClass = getSelectedCategoryClass;\n        self.selectCategory = selectCategory;\n        self.searchMobs = searchMobs;\n        self.showMobDetails = showMobDetails;\n        self.joinMob = joinMob;\n\n        activate();\n\n        function activate () {\n            AnalyticsService.screenView('Mobs');\n\n            if (ObservationService.placeToView) {\n                let place = ObservationService.placeToView;\n                ObservationService.placeToView = null;\n\n                items.places = []; // `selectCategory` will not load the default list if this already exists\n                selectCategory('places');\n                self.searchString = place.title;\n\n                $ionicLoading.show()\n                    .then(() => retrievePlaceMobs(place))\n                    .finally(() => {\n                        self.loaded = true;\n                        $ionicLoading.hide();\n                    });\n            } else {\n                selectCategory($state.$current.selected || 'places');\n            }\n        }\n\n        function getSelectedCategoryClass () {\n            let index = self.categories.indexOf(self.selectedCategory);\n\n            return index !== -1\n                ? 'ft-nav-selected-' + (index + 1)\n                : false;\n        }\n\n        function selectCategory (category) {\n            // Will add results object if it exists, otherwise will just send ctx_search\n            AnalyticsService.recordEvent(\"MOBS\", \"4.5 - Mob\", angular.extend({\n                \"ctx_search\": category\n            }, resultsObj[category]), {});\n\n            if (self.selectedCategory !== category) {\n                if (searchStringCache.hasOwnProperty(self.selectedCategory)) {\n                    searchStringCache[self.selectedCategory] = self.searchString;\n                }\n\n                self.selectedCategory = category;\n                self.displayItems = items[category];\n                self.searchString = searchStringCache[category];\n                $state.$current.selected = category;\n                $ionicScrollDelegate.$getByHandle('list').scrollTop(false);\n\n                $timeout(() => self.lastSearchedString = self.searchString); // wrapped in $timeout to prevent flicker\n\n                if (!self.displayItems) {\n                    $ionicLoading.show()\n                        .then(() => retrieveDefaultMobs(category))\n                        .finally(() => {\n                            self.loaded = true;\n                            $ionicLoading.hide();\n                        });\n                }\n            }\n        }\n\n        function searchMobs (category, searchString) {\n            let type = getTypeFromCategory(category);\n\n            searchString = (searchString || '') + ''; // ensure stringiness\n\n            if (searchString.length < 3) {\n                return retrieveDefaultMobs(category);\n            } else {\n                return ObservationService.searchMobs(type, searchString)\n                    .then(results => {\n                        setDisplayItems(category, results, searchString);\n\n                        // Clear results object by category\n                        resultsObj[category] = {};\n                        results.forEach((el, idx) => {\n                            resultsObj[category][\"ctx_score_\" + (idx + 1)] = el.upvoteCount;\n                            resultsObj[category][\"ctx_name_\" + (idx + 1)] = el.title;\n                            resultsObj[category][\"ctx_review_text_\" + (idx + 1)] = el.description;\n                            resultsObj[category][\"ctx_distance_\" + (idx + 1)] = el.distance || \"N/A\";\n                        });\n\n                        AnalyticsService.recordEvent(\"MOBS\", \"4.5 - Mob\", angular.extend({\n                            \"ctx_search\": category,\n                        }, resultsObj[category]), {});\n                    })\n                    .catch(err => console.error(err));\n            }\n        }\n\n        function showMobDetails (mob) {\n            TapDetailsModalService.showMobDetails(mob, self.selectedCategory);\n        }\n\n        function joinMob (mob) {\n            if (!isJoiningMob && !mob.isMobMember) {\n                isJoiningMob = true;\n\n                ObservationService.join(mob).finally(() => isJoiningMob = false);\n            }\n        }\n\n        function getTypeFromCategory (category) {\n            if (category === 'people') {\n                return 'person';\n            } else if (category === 'places') {\n                return 'place';\n            } else if (category === 'things') {\n                return 'thing';\n            }\n\n            return null;\n        }\n\n        function setDisplayItems (category, displayItems, searchString) {\n            if (searchString) {\n                self.lastSearchedString = searchString;\n            }\n\n            return $timeout(() => { // wrapped in $timeout to prevent flicker\n                if (!items[category]) {\n                    items[category] = [];\n                }\n\n                angular.copy(displayItems, items[category]);\n\n                if (!self.displayItems) {\n                    self.displayItems = items[category];\n                }\n\n                return self.displayItems;\n            });\n        }\n\n        function retrieveDefaultMobs (category) {\n            let type = getTypeFromCategory(category);\n            let coords = LocationService.hasLocation ? LocationService.lastKnownLocation.coords : null;\n\n            return ObservationService.getMobs(type, coords)\n                .then(results => setDisplayItems(category, results))\n                .catch(err => console.error(err));\n        }\n\n        function retrievePlaceMobs (place) {\n            return ObservationService.getMobsForLocation(place.placeId)\n                .then(items => items.filter(item => item.upvoteCount)) // only want movements with upvotes\n                .then(results => setDisplayItems('places', results, place.title))\n                .catch(err => console.error(err));\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('NearbyController', NearbyController);\n\n    NearbyController.$inject = [\n        '$state', '$timeout', '$scope', '$cordovaDialogs', '$ionicModal', 'lodash', 'IOIService', 'LocationService',\n        'TapDetailsModalService', 'AnalyticsService'\n    ];\n\n    function NearbyController (\n        $state, $timeout, $scope, $cordovaDialogs, $ionicModal, lodash, IOIService, LocationService,\n        TapDetailsModalService, AnalyticsService) {\n        var self = this;\n\n        self.locationResults = [];\n        self.locationSearchString = '';\n        self.filterLocation = ''; // location search string\n        self.filterCategories = []; // categories to filter; empty returns all categories\n        self.filterPlace = null; // location filter place; use current location if falsy\n        self.filterRatings = null; // which ratings to show; will be set in filter modal\n        self.filterMobsOnly = false;\n        self.loaded = false;\n        self.items = null;\n\n        self.loadLocations = loadLocations;\n        self.openFilter = openFilter;\n        self.locationSearch = locationSearch;\n        self.selectLocation = selectLocation;\n        self.viewTaps = viewTaps;\n        self.getActiveCategories = getActiveCategories;\n\n        activate();\n\n        function activate () {\n            loadLocations();\n        }\n\n        function loadLocations (coords, categories) {\n            categories = categories || [];\n\n            self.items = null;\n            self.loaded = false;\n            $scope.$broadcast('nearbyLoadStart');\n\n            IOIService.getNearby(coords, categories)\n                .then(response => {\n                    self.items = response.items;\n                    let numMOBs = self.items.reduce((sum, el) => sum += el.isMob, 0);\n                    $scope.$broadcast('nearbyLoadSuccess', response.items, response.boundingBox);\n\n                    let filterCategories = lodash.compact(response.categories).sort().map(label => ({\n                        label,\n                        active: categories.indexOf(label) !== -1 // active if category was previously selected\n                    }));\n                    angular.copy(filterCategories, self.filterCategories); // preserve object reference\n\n                    let searchObj = {};\n                    response.items.forEach((el, idx) => {\n                        searchObj['ctx_score_' + (idx + 1)] = el.rating;\n                        searchObj['ctx_name_' + (idx + 1)] = el.title;\n                        searchObj['ctx_distance_' + (idx + 1)] = el.distance;\n                    });\n\n                    AnalyticsService.recordEvent(\"NEARBY\", \"4.1 - Nearby\", searchObj, {\n                        \"ctx_Map\" : $state.current.name.indexOf('map') !== -1 ? 1: 0,\n                        \"ctx_MOBs\" : numMOBs ? 1 : 0,\n                        \"ctx_numMOBs\" : numMOBs\n                    });\n                })\n                .catch(err => {\n                    $cordovaDialogs.alert('Unable to load location data.', 'Location Error', 'OK');\n                    $scope.$broadcast('nearbyLoadError');\n                })\n                .finally(() => self.loaded = true);\n        }\n\n        function openFilter () {\n            let scope = $scope.$new();\n            let oldCategories = self.getActiveCategories();\n\n            scope.closeModal = () => scope.modal && scope.modal.hide();\n\n            scope.$on('$destroy', () => {\n                scope && scope.modal && scope.modal.remove();\n            });\n\n            scope.$on('modal.hidden', function () {\n                let categories = self.getActiveCategories();\n\n                if (!angular.equals(categories, oldCategories)) {\n                    loadLocations(self.filterPlace ? self.filterPlace.coords : null, categories);\n                }\n\n                self.filterMobsOnly = scope.options.mobsOnly;\n                self.filterRatings = scope.options.ratings;\n\n                let screenName = $state.current.name.indexOf('map') !== -1\n                    ? 'Nearby Map'\n                    : 'Nearby List';\n\n                AnalyticsService.recordEvent('FILTER_DISMISS', screenName, {\n                    ctx_filterCategories: categories.join(',') || 'all'\n                }, {\n                    ctx_mobsOnly: scope.options.mobsOnly ? 1 : 0,\n                    ctx_myNetworkOnly: 0 // TODO use actual value when this is implemented\n                });\n            });\n\n            scope.options = {\n                mobsOnly: self.filterMobsOnly,\n                ratings: self.filterRatings\n            };\n\n            return $ionicModal.fromTemplateUrl('app/routes/main/nearby/filter-modal/filter-modal.html', {\n                scope,\n                animation: 'slide-in-right'\n            }).then(modal => {\n                scope.modal = modal;\n                scope.modal.show();\n\n                $scope.$broadcast('nearbyFilterOpened');\n            });\n        }\n\n        function locationSearch (searchString) {\n            LocationService.locationSearch(searchString)\n                .then(results => {\n                    self.locationResults = results;\n\n                    let namesObj = {};\n                    results.forEach((el, idx) => {\n                        namesObj['ctx_name_' + (idx + 1)] = el.description;\n                    });\n\n                    AnalyticsService.recordEvent(\"NEARBY\", \"4.1 - Nearby\",\n                        namesObj, {\n                            \"ctx_Map\" : $state.current.name.indexOf('map') !== -1 ? 1: 0\n                        });\n                })\n                .catch(err => {\n                    self.locationResults = [];\n                    console.error(err);\n                });\n        }\n\n        function selectLocation (placeId) {\n            LocationService.getPlaceDetails(placeId)\n                .then(place => {\n                    self.locationResults = [];\n                    self.locationSearchString = place.name;\n                    self.filterPlace = place;\n                    self.filterPlace.coords = {\n                        latitude: place.geometry.location.lat(),\n                        longitude: place.geometry.location.lng()\n                    };\n\n                    $scope.$broadcast('nearbyLocationChange', self.filterPlace);\n                    loadLocations(self.filterPlace.coords);\n                })\n                .catch(err => {\n                    $cordovaDialogs.alert('Unable to load location data.', 'Location Error', 'OK');\n                });\n        }\n\n        function viewTaps (place) {\n            TapDetailsModalService.showTapDetails(place.placeId);\n            AnalyticsService.recordEvent(\"VIEW_LOCATION\", \"4.3 - Nearby\", {\n                \"ctx_locName\": place.title,\n                \"ctx_locAddress\": place.address,\n                \"ctx_filterCategories\": getActiveCategories().join(',') || 'all'\n            }, {});\n        }\n\n        function getActiveCategories () {\n            return self.filterCategories.filter(category => category.active).map(category => category.label);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('ProfileController', ProfileController);\n\n    ProfileController.$inject = ['$scope', '$timeout', '$ionicActionSheet', 'AuthService', 'LocationService', 'UserService', 'ProfilePictureService'];\n\n    function ProfileController ($scope, $timeout, $ionicActionSheet, AuthService, LocationService, UserService, ProfilePictureService) {\n        var self = this;\n\n        self.hasFacebook = AuthService.isUsingFacebook();\n        self.photoLoaded = false;\n\n        self.user = {\n            photoLink: UserService.photoLink,\n            name: UserService.name || UserService.username,\n            location: UserService.location,\n\n            stats: [\n                { name: 'love', number: null },\n                { name: 'ok',   number: null },\n                { name: 'hate', number: null }\n            ]\n        };\n\n        self.choosePhoto = choosePhoto;\n\n        activate();\n\n        function activate () {\n\n            if (!self.user.location && LocationService.lastKnownLocation) {\n                LocationService.getPlaceName({\n                    lat: LocationService.lastKnownLocation.coords.latitude,\n                    lng: LocationService.lastKnownLocation.coords.longitude\n                }).then(placeName => self.user.location = placeName);\n            }\n\n            UserService.registerUser(UserService.socialId, UserService.email, ProfilePictureService.getFacebookProfilePictureUrl(), UserService.username)\n                .then(response => {\n                    setPhoto(response.data.photoLink || 'app/img/fallback-profile-image.png');\n\n                    self.user.stats[0].number = response.data.loveCount || 0;\n                    self.user.stats[1].number = response.data.okCount || 0;\n                    self.user.stats[2].number = response.data.hateCount || 0;\n                });\n        }\n\n        function choosePhoto () {\n            let buttons = [\n                { text: (ionic.Platform.isAndroid() ? '<i class=\"icon ion-android-camera\"></i> ' : '') + 'Take a Photo' },\n                { text: (ionic.Platform.isAndroid() ? '<i class=\"icon ion-android-person\"></i> ' : '') + 'Use Facebook Photo' }\n            ];\n\n            if (!self.hasFacebook) {\n                buttons.pop();\n            }\n\n            const hideSheet = $ionicActionSheet.show({\n                titleText: 'Choose a Photo',\n                buttons: buttons,\n                cancelText: '<strong>Cancel</strong>',\n                cancel: () => {},\n                buttonClicked: index => {\n                    if (index === 0) {\n                        takePhoto();\n                    } else if (index === 1) {\n                        facebookPhoto();\n                    }\n\n                    hideSheet();\n                }\n            });\n        }\n\n        function takePhoto () {\n            ProfilePictureService.takeProfilePicture()\n                .then(blob => {\n                    const reader = new FileReader;\n\n                    reader.onload = () => $scope.$apply(setPhoto(reader.result));\n                    reader.readAsDataURL(blob);\n\n                    return ProfilePictureService.uploadProfilePicture(blob);\n                })\n                .catch(err => console.error(err));\n        }\n\n        function facebookPhoto () {\n            ProfilePictureService.useFacebookProfilePicture()\n                .then(photoLink => setPhoto(photoLink))\n                .catch(err => console.error(err));\n        }\n\n        function setPhoto (photoLink) {\n            if (self.user.photoLink && self.user.photoLink !== photoLink) {\n                self.photoLoaded = false;\n                self.user.photoLink = '';\n\n                $timeout(() => self.user.photoLink = photoLink, 300); // wait for picture fade out animation to complete\n            } else {\n                self.user.photoLink = photoLink;\n            }\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('TapController', TapController);\n\n    TapController.$inject = ['AnalyticsService'];\n\n    function TapController (AnalyticsService) {\n        const self = this;\n\n        activate();\n\n        function activate () {\n            AnalyticsService.screenView('Main Tap');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('FilterModalController', FilterModalController);\n\n    FilterModalController.$inject = ['$scope', 'AnalyticsService'];\n\n    function FilterModalController ($scope, AnalyticsService) {\n        const self = this;\n\n        self.allActive = checkAllActive();\n        self.ratings = [ 'love', 'ok', 'hate' ];\n\n        // we want this object to be distinct from nearbyCtrl.filterRatings so that the new filter doesn't take effect\n        // until the modal is closed\n        $scope.options.ratings = $scope.options.ratings\n            ? angular.copy($scope.options.ratings)\n            : self.ratings.reduce(\n                (status, rating) => {\n                    status[rating] = true; // start with all active\n                    return status;\n                }, {}\n            );\n\n        let ratingStatus = $scope.options.ratings;\n\n        self.toggle = toggle;\n        self.toggleAll = toggleAll;\n        self.toggleRating = toggleRating;\n        self.isRatingActive = isRatingActive;\n\n        activate();\n\n        function activate () {\n            AnalyticsService.screenView('Nearby Filter');\n        }\n\n        function toggle (category) {\n            category.active = !category.active;\n\n            self.allActive = checkAllActive();\n        }\n\n        function toggleAll () {\n            if (!self.allActive) {\n                self.allActive = true;\n                $scope.nearbyCtrl.filterCategories.forEach(category => category.active = false);\n            } else {\n                // if `all` is active, then no other categories are selected, so do nothing\n            }\n        }\n\n        function checkAllActive () {\n            return $scope.nearbyCtrl.filterCategories.reduce(\n                (result, category) => category.active ? false : result, true\n            );\n        }\n\n        function toggleRating (rating) {\n            ratingStatus[rating] = !ratingStatus[rating];\n        }\n\n        function isRatingActive (rating) {\n            return ratingStatus[rating];\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('NearbyListController', NearbyListController);\n\n    NearbyListController.$inject = ['AnalyticsService'];\n\n    function NearbyListController (AnalyticsService) {\n        var self = this;\n\n        activate();\n\n        function activate () {\n            AnalyticsService.screenView('Nearby List');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('NearbyMapController', NearbyMapController);\n\n    NearbyMapController.$inject = [\n        '$state', '$q', '$templateRequest', '$scope', '$compile', '$timeout', '$ionicLoading', 'moment',\n        'LocationService', 'IOIService', 'ObservationService', 'AnalyticsService'\n    ];\n\n    function NearbyMapController ($state, $q, $templateRequest, $scope, $compile, $timeout, $ionicLoading, moment,\n        LocationService, IOIService, ObservationService, AnalyticsService) {\n        const self = this;\n\n        const screenName = 'Nearby Map';\n        const DEFAULT_ZOOM = 18;\n        const MapIcon = L.DivIcon.extend({\n            options: {\n                className: 'ft-map-icon',\n                iconSize: [30, 31],\n                iconAnchor: [15, 15.5]\n            }\n        });\n        const loveIcon = new MapIcon({ html: '<img src=\"app/img/map-pin_love.png\">' });\n        const okIcon = new MapIcon({ html: '<img src=\"app/img/map-pin_ok.png\">' });\n        const hateIcon = new MapIcon({ html: '<img src=\"app/img/map-pin_hate.png\">' });\n        const noTapsIcon = new MapIcon({ html: '<img src=\"app/img/map-pin_no_mobs.png\">' });\n\n        let map;\n        let locationMarkers = [];\n        let currentLocationMarker;\n        let currentPosition;\n        let boundingBox = null; // the bounding box of the current result set\n\n        self.hasLocation = LocationService.hasLocation;\n        self.canRecenter = false;\n\n        self.viewMobs = viewMobs;\n        self.centerMap = centerMap;\n\n        $scope.$on('nearbyLoadStart', event => {});\n\n        $scope.$on('nearbyLoadSuccess', (event, items, box) => {\n            clearMarkers();\n            addMarkers(items);\n\n            boundingBox = new L.LatLngBounds( // `box` looks like [minlat, minlon, maxlat, maxlon]\n                new L.LatLng(box[0], box[1]), new L.LatLng(box[2], box[3])\n            );\n        });\n\n        $scope.$on('nearbyLocationChange', (event, place) => {\n            map.setView(new L.LatLng(place.coords.latitude, place.coords.longitude), DEFAULT_ZOOM);\n        });\n\n        $scope.$on('nearbyFilterOpened', event => map.closePopup()); // close all popups on filter open to prevent items\n                                                                     // removed by filtering from having popups retained\n        activate();\n\n        function activate () {\n            AnalyticsService.screenView(screenName);\n\n            if (self.hasLocation) {\n                let coords = $scope.nearbyCtrl.filterPlace\n                    ? $scope.nearbyCtrl.filterPlace.coords\n                    : LocationService.lastKnownLocation.coords;\n\n                $timeout(() => { // this section must be wrapped in a timeout for the tile layer to load correctly\n                    currentPosition = L.latLng(coords.latitude, coords.longitude);\n                    map = L.map('ft-nearby-map').setView(currentPosition, DEFAULT_ZOOM);\n\n                    L.tileLayer('http://mt{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {\n                        subdomains: [0, 1, 2, 3],\n                        attribution: '',\n                        attributionControl: false,\n                        maxZoom: 22,\n                        maxNativeZoom: 20,\n                        minZoom: 12\n                    }).addTo(map);\n\n                    currentLocationMarker = L.marker(currentPosition, {\n                        clickable: false,\n                        zIndexOffset: 1000\n                    });\n                    currentLocationMarker.addTo(map);\n                }, 0).then(() => {\n                    if ($scope.nearbyCtrl.items) {\n                        addMarkers($scope.nearbyCtrl.items);\n                    }\n\n                    map.on('moveend', () => $timeout(() => {\n                        let mapBox = map.getBounds();\n                        let mapCenter = map.getCenter();\n                        let mapLocations = locationMarkers\n                            .filter(marker => mapBox.contains(marker._latlng) && marker.title)\n                            .map(marker => marker.title);\n\n                        AnalyticsService.recordEvent('MAP_PANNING', screenName, {\n                            ctx_locations: mapLocations.join(', ')\n                        }, {\n                            ctx_numLocs: mapLocations.length,\n                            ctx_centerMapLat: mapCenter.lat,\n                            ctx_centerMapLong: mapCenter.lng\n                        });\n\n                        if (boundingBox && !boundingBox.contains(mapBox)) {\n                            $scope.nearbyCtrl.loadLocations(\n                                { latitude: mapCenter.lat, longitude: mapCenter.lng },\n                                $scope.nearbyCtrl.getActiveCategories()\n                            );\n                        }\n\n                        self.canRecenter = !map.getBounds().contains(currentPosition);\n                    }));\n                });\n            }\n        }\n\n        function clearMarkers () {\n            while (locationMarkers.length) {\n                let marker = locationMarkers.pop();\n                angular.element(marker._icon).removeClass('ft-visible');\n\n                $timeout(() => {\n                    map.removeLayer(marker);\n                }, 300);\n            }\n        }\n\n        function addMarkers (items) {\n            $q.all(\n                items.map(item => {\n                    let icon;\n\n                    if ('love' === item.rating) {\n                        icon = loveIcon;\n                    } else if ('ok' === item.rating) {\n                        icon = okIcon;\n                    } else if ('hate' === item.rating) {\n                        icon = hateIcon;\n                    }\n\n                    return addMarker(item, icon);\n                })\n            ).then(() => {\n                let place = $scope.nearbyCtrl.filterPlace;\n\n                if (place && place.types.indexOf('establishment') !== -1) {\n                    let marker = getMarkerByPlaceId(place.place_id);\n                    let getCurrentMarker = marker\n                        ? $q.resolve(marker)\n                        : addMarker({\n                            placeId: place.place_id,\n                            coords: place.coords,\n                            title: place.name,\n                            address: place.formatted_address,\n                            phone: place.formatted_phone_number,\n                            closingTime: place.opening_hours\n                                ? LocationService.getClosingTimes(place.opening_hours)[moment().day()]\n                                : null,\n                            isMob: false\n                        }, noTapsIcon);\n\n                    // if our dot overlaps others, we'll zoom in a little bit more\n                    getCurrentMarker.then(marker => {\n                        let point = map.latLngToLayerPoint(marker._latlng);\n                        let minDistance = Math.min.apply(null, locationMarkers.map(\n                            otherMarker => otherMarker !== marker\n                                ? map.latLngToLayerPoint(otherMarker._latlng).distanceTo(point)\n                                : 99999\n                        ));\n\n                        if (minDistance < 30) {\n                            map.setZoom(DEFAULT_ZOOM + (minDistance < 7 ? 2 : 1));\n                        }\n                    });\n                }\n            });\n        }\n\n        function addMarker (item, icon) {\n            let marker = L.marker([ item.coords.latitude, item.coords.longitude ], { icon });\n            marker.placeId = item.placeId;\n            marker.title = item.title;\n\n            return createPopup(item).then(popup => {\n                marker.bindPopup(popup);\n                marker.addTo(map);\n\n                if (item.isMob) {\n                    angular.element(marker._icon).addClass('ft-map-icon-mob');\n                }\n\n                if (item.rating) {\n                    angular.element(marker._icon).addClass('ft-map-icon-' + item.rating);\n                }\n\n                locationMarkers.push(marker);\n\n                return $timeout(() => {\n                    angular.element(marker._icon).addClass('ft-visible');\n\n                    return marker;\n                });\n            });\n        }\n\n        function createPopup (place) {\n            return $templateRequest('app/routes/main/nearby/nearby-map/nearby-popup/nearby-popup.html')\n                .then(template => {\n                    let scope = $scope.$new();\n                    scope.place = place;\n                    return $compile(angular.element(template))(scope)[0];\n                });\n        }\n\n        function getMarkerByPlaceId (placeId) {\n            return locationMarkers.reduce(\n                (foundMarker, marker) => foundMarker || (marker.placeId === placeId ? marker : null), null\n            );\n        }\n\n        function viewMobs (place) {\n            ObservationService.placeToView = place;\n            $state.go('main.mobs');\n        }\n\n        function centerMap () {\n            if (LocationService.hasLocation) {\n                let coords = LocationService.lastKnownLocation.coords;\n                currentPosition = L.latLng(coords.latitude, coords.longitude);\n            }\n\n            currentLocationMarker.setLatLng(currentPosition);\n            map.setView(currentPosition, DEFAULT_ZOOM);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('MyMobsController', MyMobsController);\n\n    MyMobsController.$inject = ['ObservationService', 'AnalyticsService', 'TapDetailsModalService'];\n\n    function MyMobsController (ObservationService, AnalyticsService, TapDetailsModalService) {\n        var self = this;\n\n        self.items = [];\n        self.loaded = false;\n\n        self.showMobDetails = showMobDetails;\n\n        activate();\n\n        function activate () {\n            AnalyticsService.screenView('My Mobs');\n            AnalyticsService.recordEvent(\"PROFILE\", \"5 - User Profile\", {}, {\n                \"ctx_MOBs\": 1,\n                \"ctx_Settings\": 0\n            });\n\n            ObservationService.upvotedObservationFeed()\n                .then(response => self.items = response.data)\n                .catch(err => console.error(err))\n                .finally(() => self.loaded = true);\n        }\n\n        function showMobDetails (mob) {\n            TapDetailsModalService.showMobDetails(mob, null);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('ftap')\n        .controller('SettingsController', SettingsController);\n\n    SettingsController.$inject = [\n        '$scope', '$state', '$window', '$timeout', '$ionicModal', '$cordovaDialogs', '$ionicLoading', 'FTAP_CONFIG',\n        'AuthService', 'SharingService', 'AnalyticsService'\n    ];\n\n    function SettingsController ($scope, $state, $window, $timeout, $ionicModal, $cordovaDialogs, $ionicLoading,\n        FTAP_CONFIG, AuthService, SharingService, AnalyticsService) {\n        var self = this;\n\n        self.sharing = SharingService;\n        self.showDebugInfo = FTAP_CONFIG.SHOW_DEBUG_INFO;\n        self.versionNumber = FTAP_CONFIG.VERSION_NUMBER;\n\n        self.connectToFacebook = connectToFacebook;\n        self.disconnectFromFacebook = disconnectFromFacebook;\n        self.logOut = logOut;\n        self.displayTermsAndConditions = displayTermsAndConditions;\n\n        $scope.closeModal = () => self.modal && self.modal.hide();\n\n        activate();\n\n        function activate () {\n            AnalyticsService.screenView('Settings');\n            AnalyticsService.recordEvent(\"PROFILE\", \"5 - User Profile\", {}, {\n                \"ctx_MOBs\": 0,\n                \"ctx_Settings\": 1\n            });\n        }\n\n        function connectToFacebook () {\n            $ionicLoading.show()\n                .then(() => AuthService.facebookLink())\n                .then(() => $state.go($state.current, {}, { reload: true }))\n                .catch(err => {\n                    $cordovaDialogs.alert('There was an error connecting your Tap profile with Facebook.',\n                        'Connect with Facebook', 'OK'\n                    );\n                    console.error(JSON.stringify(err));\n                })\n                .finally(() => $ionicLoading.hide());\n        }\n\n        function disconnectFromFacebook () {\n            $ionicLoading.show()\n                .then(() => AuthService.facebookUnlink())\n                .then(() => $state.go($state.current, {}, { reload: true }))\n                .catch(err => {\n                    $cordovaDialogs.alert('There was an error disconnecting your Tap profile from Facebook.',\n                        'Disconnect from Facebook', 'OK'\n                    );\n\n                    console.error(JSON.stringify(err));\n                })\n                .finally(() => $ionicLoading.hide());\n        }\n\n        // Open terms and conditions popup\n        function displayTermsAndConditions () {\n            $ionicModal.fromTemplateUrl('app/routes/main/profile/settings/terms-and-conditions-modal.html', {\n                backdropClickToClose: false,\n                scope: $scope,\n            }).then(modal => {\n                self.modal = modal;\n                self.modal.show();\n            });\n        }\n\n        function logOut () {\n            AuthService.logOut()\n                .then(() => {\n                    if (angular.isDefined($window.navigator) && angular.isDefined($window.navigator.splashscreen)) {\n                        $window.navigator.splashscreen.show();\n                    }\n\n                    return $state.go('auth.signup', { reload: true });\n                });\n        }\n    }\n})();\n"]}